{
    "docs": [
        {
            "location": "/", 
            "text": "Disclaimer\n\n\nThis setup documentation was realised on Ubuntu 12.04 and would need update for more recent ubuntu and Postfix\n\n\n\n\nWelcome to Postfix handbook Site\n\n\nThis documentation is a compilation of information gathered over the years to build an outgoing mail server with postfix. This is not aiming to be a all go configuration and open sourced for contribution.\n\n\nMain Sections\n\n\nA concise guide. If you just want a robust outgoing mail server, you don\nt need to spend $4500 in a PowerMTA solution. Here we show you how to setup your own SMTP, spam filter proof able to send 300 000 email an hour.\n\n\nUbuntu 12.04.4 LTS\n\n\n[Pages]\n\n\nDisclaimer", 
            "title": "About"
        }, 
        {
            "location": "/#welcome-to-postfix-handbook-site", 
            "text": "This documentation is a compilation of information gathered over the years to build an outgoing mail server with postfix. This is not aiming to be a all go configuration and open sourced for contribution.", 
            "title": "Welcome to Postfix handbook Site"
        }, 
        {
            "location": "/#main-sections", 
            "text": "A concise guide. If you just want a robust outgoing mail server, you don t need to spend $4500 in a PowerMTA solution. Here we show you how to setup your own SMTP, spam filter proof able to send 300 000 email an hour.  Ubuntu 12.04.4 LTS  [Pages]", 
            "title": "Main Sections"
        }, 
        {
            "location": "/#disclaimer", 
            "text": "", 
            "title": "Disclaimer"
        }, 
        {
            "location": "/installation/", 
            "text": "1.1. Install postfix and opendkim\n\n\napt-get install postfix opendkim -y\n\n\n1.2. Modify postfix configuration\n\n\nhint: don\u2019t set \u2018mydestination=pronostic-facile.fr\u2019 else any bounce or postmaster will be delivred localy\n\n\npostconf -e mydomain=pronostic-facile.fr\npostconf -e inet_protocols=ipv4\npostconf -e myhostname=pronostic-facile.fr\npostconf -e smtpd_sasl_local_domain=pronostic-facile.fr\npostconf -e smtpd_sasl_auth_enable=yes\npostconf -e smtpd_sasl_tls_security_options=\"noanonymous, noplaintext\"\npostconf -e broken_sasl_auth_clients=yes\npostconf -e smtpd_recipient_restrictions=\"permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination\"\npostconf -e milter_default_action=accept\npostconf -e milter_protocol=2\nsmtp_helo_name = pronostic-facile.fr\ndefault_destination_concurrency_limit = 20\naddress_verify_map = memcache:/etc/postfix/verify-memcache.cf\naddress_verify_cache_cleanup_interval = 0\n\n\n\nmyhostname\n: This is the hostname of your machine. But don\nt put the full hostname. If your machine hostname is mail.mydomain.com you will only use mydomain.\n\nmydestination\n: This parameter specifies what destinations this machine will deliver locally. The default is:\n\n\nmydestination = $myhostname localhost.$mydomain localhost\n\n\n1.3. Submission (port: 587) configuration\n\n\nsubmission inet n \u2013 n \u2013 \u2013 smtpd\n-o smtpd_tls_security_level=encrypt\n-o smtpd_sasl_auth_enable=yes\n\nsmtp       inet n       -       n       -       -       smtpd -v\nsubmission inet n       -       n       -       -       smtpd\n        -o smtpd_etrn_restrictions=reject\n        -o smtpd_sasl_type=dovecot\n        -o smtpd_sasl_path=private/auth\n        -o smtpd_sasl_auth_enable=yes\n        -o smtpd_reject_unlisted_sender=yes\n        -o smtpd_recipient_restrictions=permit_mynetworks,permit_sasl_authenticated,reject\n\n\n\n1.4. Restart postfix\n\n\nservice postfix restart\n\n\n\n1.5. Keep on time\n\n\nAdd ntp time-date (very important to maintain the date-time stamp when dealing with emails)\n\n\nntpdate ntp.pool.org\nservice ntpd start\nchkconfig ntpd on", 
            "title": "1. Installation"
        }, 
        {
            "location": "/installation/#11-install-postfix-and-opendkim", 
            "text": "apt-get install postfix opendkim -y", 
            "title": "1.1. Install postfix and opendkim"
        }, 
        {
            "location": "/installation/#12-modify-postfix-configuration", 
            "text": "hint: don\u2019t set \u2018mydestination=pronostic-facile.fr\u2019 else any bounce or postmaster will be delivred localy  postconf -e mydomain=pronostic-facile.fr\npostconf -e inet_protocols=ipv4\npostconf -e myhostname=pronostic-facile.fr\npostconf -e smtpd_sasl_local_domain=pronostic-facile.fr\npostconf -e smtpd_sasl_auth_enable=yes\npostconf -e smtpd_sasl_tls_security_options=\"noanonymous, noplaintext\"\npostconf -e broken_sasl_auth_clients=yes\npostconf -e smtpd_recipient_restrictions=\"permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination\"\npostconf -e milter_default_action=accept\npostconf -e milter_protocol=2\nsmtp_helo_name = pronostic-facile.fr\ndefault_destination_concurrency_limit = 20\naddress_verify_map = memcache:/etc/postfix/verify-memcache.cf\naddress_verify_cache_cleanup_interval = 0  myhostname : This is the hostname of your machine. But don t put the full hostname. If your machine hostname is mail.mydomain.com you will only use mydomain. mydestination : This parameter specifies what destinations this machine will deliver locally. The default is:  mydestination = $myhostname localhost.$mydomain localhost", 
            "title": "1.2. Modify postfix configuration"
        }, 
        {
            "location": "/installation/#13-submission-port-587-configuration", 
            "text": "submission inet n \u2013 n \u2013 \u2013 smtpd\n-o smtpd_tls_security_level=encrypt\n-o smtpd_sasl_auth_enable=yes\n\nsmtp       inet n       -       n       -       -       smtpd -v\nsubmission inet n       -       n       -       -       smtpd\n        -o smtpd_etrn_restrictions=reject\n        -o smtpd_sasl_type=dovecot\n        -o smtpd_sasl_path=private/auth\n        -o smtpd_sasl_auth_enable=yes\n        -o smtpd_reject_unlisted_sender=yes\n        -o smtpd_recipient_restrictions=permit_mynetworks,permit_sasl_authenticated,reject", 
            "title": "1.3. Submission (port: 587) configuration"
        }, 
        {
            "location": "/installation/#14-restart-postfix", 
            "text": "service postfix restart", 
            "title": "1.4. Restart postfix"
        }, 
        {
            "location": "/installation/#15-keep-on-time", 
            "text": "Add ntp time-date (very important to maintain the date-time stamp when dealing with emails)  ntpdate ntp.pool.org\nservice ntpd start\nchkconfig ntpd on", 
            "title": "1.5. Keep on time"
        }, 
        {
            "location": "/dkim_spf/", 
            "text": "2.1. Install dkim related packages\n\n\napt-get install opendkim opendkim-tools\n\n\n\n2.2. Configure DKIM\n\n\nCopy paste the following into a text file and save as a bash script. You can change the variables \u201cDOMAIN\u201d and \u201cSELECTOR\u201d to the one you choose depending upon the requirement.\n\n\nDOMAIN=\"pronostic-facile.fr\"\nSELECTOR=\"default\"\n\nmkdir -p /etc/opendkim/keys/${DOMAIN}\nopendkim-genkey -D /etc/opendkim/keys/${DOMAIN}/ -d ${DOMAIN} -s ${SELECTOR}\nchown -R opendkim:opendkim /etc/opendkim/keys/${DOMAIN}\n\ncat \n /etc/opendkim/dkim-InternalHosts.txt \n EOF\n${DOMAIN}\n`hostname`\n`ifconfig |grep \"inet addr:\"|awk '{print $2}'|cut -d: -f2|uniq`\nEOF\n\ncat \n /etc/opendkim.conf \n EOF\nPidFile                 /var/run/opendkim/opendkim.pid\nSyslog                  yes\nDomain                  ${DOMAIN}\nKeyFile                 /etc/opendkim/keys/${DOMAIN}/${SELECTOR}.private\nSelector                ${SELECTOR}\nSyslogSuccess           yes\nLogWhy                  yes\nUserID                  opendkim:opendkim\nUmask                   002\nCanonicalization        relaxed/simple\nAutoRestart             yes\nBackground              yes\nDNSTimeout              10\nMode                    sv\nSignatureAlgorithm      rsa-sha256\nSubDomains              no\nX-Header                no\nStatistics              /var/log/dkim-filter/dkim-stats\nInternalHosts          /etc/opendkim/dkim-InternalHosts.txt\nEOF\n\ncat \n /etc/default/opendkim \n EOF\nSOCKET=\"inet:8891@localhost\"\nEOF\n\npostconf -e smtpd_milters=\"inet:localhost:8891\"\npostconf -e non_smtpd_milters=\"inet:localhost:8891\"\n\nservice opendkim restart\nservice postfix restart\n\n\n\n2.3. Update DNS\n\n\nAdd server ip\u2019s 144.76.113.170 \n 144.76.113.185 to spf record of domain. SPF and TXT records:\n\n\n\"v=spf1 A include:aspmx.googlemail.com +ip4:5.9.20.211  ip4:144.76.113.170 ip4:144.76.113.185 include:_spf.google.com include:spf.mailjet.com include:helpscoutemail.com include:mailgun.org ~all\"\n\n\n\nPublish the contents of file /etc/opendkim/keys/pronostic-facile.fr/default.txt as a TXT record in the dns of domain.\n\n\nroot@Ubuntu-1204-precise-64-minimal ~ # cat /etc/opendkim/keys/pronostic-facile.fr/default.txt\n\ndefault._domainkey IN TXT \"v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQIy9sM3H5n5WjaiiDnwG9iHg18y78eA0L8zyRbv3DPd6anfJ9D+kC4ypiqNBTTOBHa70tYe8pT3+4042S0QpVgnS8TaRpxxVY0rIJjnKBjrpbmCtWhcHfrcETAKxkTeXVvcDMjRRF4RA0r7mJ8hMSByGSHyxVM1VK9Ex+GBgO4QIDAQAB\" ; ----- DKIM key default for pronostic-facile.fr\n\nroot@Ubuntu-1204-precise-64-minimal ~ #\n\n\n\nRef: https://help.ubuntu.com/community/Postfix/DKIM\nhttp://askubuntu.com/questions/134725/setup-dkim-domainkeys-for-ubuntu-postfix-and-mailman", 
            "title": "2. DKIM and SPF"
        }, 
        {
            "location": "/dkim_spf/#21-install-dkim-related-packages", 
            "text": "apt-get install opendkim opendkim-tools", 
            "title": "2.1. Install dkim related packages"
        }, 
        {
            "location": "/dkim_spf/#22-configure-dkim", 
            "text": "Copy paste the following into a text file and save as a bash script. You can change the variables \u201cDOMAIN\u201d and \u201cSELECTOR\u201d to the one you choose depending upon the requirement.  DOMAIN=\"pronostic-facile.fr\"\nSELECTOR=\"default\"\n\nmkdir -p /etc/opendkim/keys/${DOMAIN}\nopendkim-genkey -D /etc/opendkim/keys/${DOMAIN}/ -d ${DOMAIN} -s ${SELECTOR}\nchown -R opendkim:opendkim /etc/opendkim/keys/${DOMAIN}\n\ncat   /etc/opendkim/dkim-InternalHosts.txt   EOF\n${DOMAIN}\n`hostname`\n`ifconfig |grep \"inet addr:\"|awk '{print $2}'|cut -d: -f2|uniq`\nEOF\n\ncat   /etc/opendkim.conf   EOF\nPidFile                 /var/run/opendkim/opendkim.pid\nSyslog                  yes\nDomain                  ${DOMAIN}\nKeyFile                 /etc/opendkim/keys/${DOMAIN}/${SELECTOR}.private\nSelector                ${SELECTOR}\nSyslogSuccess           yes\nLogWhy                  yes\nUserID                  opendkim:opendkim\nUmask                   002\nCanonicalization        relaxed/simple\nAutoRestart             yes\nBackground              yes\nDNSTimeout              10\nMode                    sv\nSignatureAlgorithm      rsa-sha256\nSubDomains              no\nX-Header                no\nStatistics              /var/log/dkim-filter/dkim-stats\nInternalHosts          /etc/opendkim/dkim-InternalHosts.txt\nEOF\n\ncat   /etc/default/opendkim   EOF\nSOCKET=\"inet:8891@localhost\"\nEOF\n\npostconf -e smtpd_milters=\"inet:localhost:8891\"\npostconf -e non_smtpd_milters=\"inet:localhost:8891\"\n\nservice opendkim restart\nservice postfix restart", 
            "title": "2.2. Configure DKIM"
        }, 
        {
            "location": "/dkim_spf/#23-update-dns", 
            "text": "Add server ip\u2019s 144.76.113.170   144.76.113.185 to spf record of domain. SPF and TXT records:  \"v=spf1 A include:aspmx.googlemail.com +ip4:5.9.20.211  ip4:144.76.113.170 ip4:144.76.113.185 include:_spf.google.com include:spf.mailjet.com include:helpscoutemail.com include:mailgun.org ~all\"  Publish the contents of file /etc/opendkim/keys/pronostic-facile.fr/default.txt as a TXT record in the dns of domain.  root@Ubuntu-1204-precise-64-minimal ~ # cat /etc/opendkim/keys/pronostic-facile.fr/default.txt\n\ndefault._domainkey IN TXT \"v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQIy9sM3H5n5WjaiiDnwG9iHg18y78eA0L8zyRbv3DPd6anfJ9D+kC4ypiqNBTTOBHa70tYe8pT3+4042S0QpVgnS8TaRpxxVY0rIJjnKBjrpbmCtWhcHfrcETAKxkTeXVvcDMjRRF4RA0r7mJ8hMSByGSHyxVM1VK9Ex+GBgO4QIDAQAB\" ; ----- DKIM key default for pronostic-facile.fr\n\nroot@Ubuntu-1204-precise-64-minimal ~ #  Ref: https://help.ubuntu.com/community/Postfix/DKIM\nhttp://askubuntu.com/questions/134725/setup-dkim-domainkeys-for-ubuntu-postfix-and-mailman", 
            "title": "2.3. Update DNS"
        }, 
        {
            "location": "/domainkeys/", 
            "text": "3.1. Install dk-filter milter package\n\n\napt-get install dk-filter\n\n\n\n3.2. Configuration\n\n\nCopy paste the following into a text file and save as a bash script. You can change the variables \u201cDOMAIN\u201d and \u201cSELECTOR\u201d to the one you choose depending upon the requirement.\n\n\nDOMAIN=\"pronostic-facile.fr\"\nSELECTOR=\"mail\"\n\nmkdir -p /etc/domainkeys/${DOMAIN}/\ncd /etc/domainkeys/${DOMAIN}/\nopenssl genrsa -out private.key 1024\nopenssl rsa -in private.key -out public.key -pubout -outform PEM\n\ncat \n /etc/domainkeys/trustlist.txt \n EOF\n${DOMAIN}\n`hostname`\n`ifconfig |grep \"inet addr:\"|awk '{print $2}'|cut -d: -f2|uniq`\nEOF\n\ncat \n  /etc/default/dk-filter \n EOF\nDAEMON_OPTS=\"-l\"\nDAEMON_OPTS=\"$DAEMON_OPTS -d ${DOMAIN} -s /etc/domainkeys/${DOMAIN}/private.key -S ${SELECTOR} -i /etc/domainkeys/trustlist.txt\"\nSOCKET=\"inet:8892@localhost\"\nEOF\n\npostconf -e smtpd_milters=\"inet:localhost:8891,inet:localhost:8892\"\npostconf -e non_smtpd_milters=\"inet:localhost:8891,inet:localhost:8892\"\n\nservice dk-filter restart\nservice postfix restart\n\n\n\n3.3. Update DNS\n\n\nPublish the following DNS records. The public key is taken from file /etc/domainkeys/pronostic-facile.fr/public.key .\n\n\n_domainkey.pronostic-facile.fr. IN TXT \"t=y; o=~;\n\nmail._domainkey.pronostic-facile.fr. IN TXT \"k=rsa; t=y; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCbG2dfmfhS2g5T5bKdzhh9oAxKHEGVJmOXcGT7bcSWsDKxXL6SWNaCl4HzHoPHVnRfjZYyNtehJ19FAupSlGme7wJNqQI6GTXAvApUYEbjKbffLfGresB6quuy//xjbK2H7J01apdvYHzDdmenwGVmufPoK4ASokm35plkXfXGVwIDAQAB\"\n\n\n\nRef: \nDomainKeys on Ubuntu", 
            "title": "3. DomainKeys"
        }, 
        {
            "location": "/domainkeys/#31-install-dk-filter-milter-package", 
            "text": "apt-get install dk-filter", 
            "title": "3.1. Install dk-filter milter package"
        }, 
        {
            "location": "/domainkeys/#32-configuration", 
            "text": "Copy paste the following into a text file and save as a bash script. You can change the variables \u201cDOMAIN\u201d and \u201cSELECTOR\u201d to the one you choose depending upon the requirement.  DOMAIN=\"pronostic-facile.fr\"\nSELECTOR=\"mail\"\n\nmkdir -p /etc/domainkeys/${DOMAIN}/\ncd /etc/domainkeys/${DOMAIN}/\nopenssl genrsa -out private.key 1024\nopenssl rsa -in private.key -out public.key -pubout -outform PEM\n\ncat   /etc/domainkeys/trustlist.txt   EOF\n${DOMAIN}\n`hostname`\n`ifconfig |grep \"inet addr:\"|awk '{print $2}'|cut -d: -f2|uniq`\nEOF\n\ncat    /etc/default/dk-filter   EOF\nDAEMON_OPTS=\"-l\"\nDAEMON_OPTS=\"$DAEMON_OPTS -d ${DOMAIN} -s /etc/domainkeys/${DOMAIN}/private.key -S ${SELECTOR} -i /etc/domainkeys/trustlist.txt\"\nSOCKET=\"inet:8892@localhost\"\nEOF\n\npostconf -e smtpd_milters=\"inet:localhost:8891,inet:localhost:8892\"\npostconf -e non_smtpd_milters=\"inet:localhost:8891,inet:localhost:8892\"\n\nservice dk-filter restart\nservice postfix restart", 
            "title": "3.2. Configuration"
        }, 
        {
            "location": "/domainkeys/#33-update-dns", 
            "text": "Publish the following DNS records. The public key is taken from file /etc/domainkeys/pronostic-facile.fr/public.key .  _domainkey.pronostic-facile.fr. IN TXT \"t=y; o=~;\n\nmail._domainkey.pronostic-facile.fr. IN TXT \"k=rsa; t=y; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCbG2dfmfhS2g5T5bKdzhh9oAxKHEGVJmOXcGT7bcSWsDKxXL6SWNaCl4HzHoPHVnRfjZYyNtehJ19FAupSlGme7wJNqQI6GTXAvApUYEbjKbffLfGresB6quuy//xjbK2H7J01apdvYHzDdmenwGVmufPoK4ASokm35plkXfXGVwIDAQAB\"  Ref:  DomainKeys on Ubuntu", 
            "title": "3.3. Update DNS"
        }, 
        {
            "location": "/opendmarc/", 
            "text": "4.1. Install opendmarc package\n\n\napt-get install opendmarc\n\n\n\n4.2. Configuration\n\n\nCopy paste the following into a text file and save as a bash script. You can change the variable \u201cDOMAIN\u201d  to the one you choose depending upon the requirement.\n\n\nDOMAIN=\"pronostic-facile.fr\"\nmkdir /usr/local/etc/opendmarc/\n\ncat \n /usr/local/etc/opendmarc/ignore.hosts \n EOF\n${DOMAIN}\n`hostname`\n`ifconfig |grep \"inet addr:\"|awk '{print $2}'|cut -d: -f2|uniq`\nEOF\n\n\ncat \n /etc/opendmarc.conf \n EOF\nAuthservID HOSTNAME\nBackground true\nBaseDirectory /var/run/opendmarc\nCopyFailuresTo postmaster@${DOMAIN}\nIgnoreHosts /usr/local/etc/opendmarc/ignore.hosts\nPidFile /var/run/opendmarc/opendmarc.pid\nSocket inet:8893@localhost\nSyslog false\nSyslogFacility mail\nTemporaryDirectory /var/tmp\nTrustedAuthservIDs HOSTNAME\nUserID opendmarc\nEOF\n\npostconf -e smtpd_milters=\"inet:localhost:8891,inet:localhost:8892,inet:localhost:8893\"\npostconf -e non_smtpd_milters=\"inet:localhost:8891,inet:localhost:8892,inet:localhost:8893\"\n\nservice opendmarc restart\nservice postfix restart\n\n\n\n4.3. Update DNS\n\n\nPublish the corresponding dns record,\n\n\n_dmarc.pronostic-facile.fr. IN TXT \"v=DMARC1;p=reject;pct=100;rua=mailto:postmaster@pronostic-facile.fr\"", 
            "title": "4. Open DMARC"
        }, 
        {
            "location": "/opendmarc/#41-install-opendmarc-package", 
            "text": "apt-get install opendmarc", 
            "title": "4.1. Install opendmarc package"
        }, 
        {
            "location": "/opendmarc/#42-configuration", 
            "text": "Copy paste the following into a text file and save as a bash script. You can change the variable \u201cDOMAIN\u201d  to the one you choose depending upon the requirement.  DOMAIN=\"pronostic-facile.fr\"\nmkdir /usr/local/etc/opendmarc/\n\ncat   /usr/local/etc/opendmarc/ignore.hosts   EOF\n${DOMAIN}\n`hostname`\n`ifconfig |grep \"inet addr:\"|awk '{print $2}'|cut -d: -f2|uniq`\nEOF\n\n\ncat   /etc/opendmarc.conf   EOF\nAuthservID HOSTNAME\nBackground true\nBaseDirectory /var/run/opendmarc\nCopyFailuresTo postmaster@${DOMAIN}\nIgnoreHosts /usr/local/etc/opendmarc/ignore.hosts\nPidFile /var/run/opendmarc/opendmarc.pid\nSocket inet:8893@localhost\nSyslog false\nSyslogFacility mail\nTemporaryDirectory /var/tmp\nTrustedAuthservIDs HOSTNAME\nUserID opendmarc\nEOF\n\npostconf -e smtpd_milters=\"inet:localhost:8891,inet:localhost:8892,inet:localhost:8893\"\npostconf -e non_smtpd_milters=\"inet:localhost:8891,inet:localhost:8892,inet:localhost:8893\"\n\nservice opendmarc restart\nservice postfix restart", 
            "title": "4.2. Configuration"
        }, 
        {
            "location": "/opendmarc/#43-update-dns", 
            "text": "Publish the corresponding dns record,  _dmarc.pronostic-facile.fr. IN TXT \"v=DMARC1;p=reject;pct=100;rua=mailto:postmaster@pronostic-facile.fr\"", 
            "title": "4.3. Update DNS"
        }, 
        {
            "location": "/bounce/", 
            "text": "Soft vs Hard\n\n\nSpecify postfix to send all bounce emails to email address \nbounce@pronostic-facile.fr\n in /etc/postfix/main.cf\n\n\npostconf -e \"notify_classes=bounce,resource,software\"\npostconf -e \"bounce_notice_recipient=bounce@pronostic-facile.fr\"\npostconf -e \"transport_maps=regexp:/etc/postfix/transport\"\npostfix reload\n\n\n\nAs we want to bounce emails to go to \nbounce@pronostic-facile.fr\n in cpanel server, we need to add the following in /etc/postfix/transport\n\n\n/bounce.*/ smtp:ASPMX.L.GOOGLE.COM:25\n\n\n\nTo forward to google apps and not local in /etc/postfix/transport\n\n\n/pronostic-facile\\.fr/ relay:[ASPMX.L.GOOGLE.COM]", 
            "title": "5. Bounce Management"
        }, 
        {
            "location": "/rate_limiting/", 
            "text": "References:\n\n\n(http://steam.io/2013/04/01/postfix-rate-limiting/)\nhttp://wiki.wordtothewise.com/ISP_Summary_Information\n\n\n6.1. Add policies in /etc/postfix/master.cf\n\n\npolite unix - - n - - smtp\nturtle unix - - n - - smtp\n\n\n\n\n\n\n\nMap domain to its transport name. For this add the following to \n/etc/postfix/transport\n\n\ngmail.com polite:\nyahoo.com turtle:\nhotmail.com polite:\naol.com turtle:\n\n\n\n\n\n\nModify postfix configuration to specify the rate limit,\n\n\npostconf -e \npolite_destination_concurrency_limit = 4\n\npostconf -e \npolite_destination_rate_delay = 0\n\npostconf -e \npolite_destination_recipient_limit = 10\n\npostconf -e \nturtle_destination_rate_delay = 3s\n\npostconf -e \nturtle_destination_concurrency_limit = 20\n\npostconf -e \nturtle_destination_recipient_limit = 4\n\n\n\n\n\n\nRestart postfix\n\n\nservice postfix restart\n\n\n\nother solution\n\n\nNow, define required additional transport in postfix master.cf file:\n\n\nsmtp-gmail unix -    -    n    -    1    smtp\n      -o syslog_name=smtp-gmail\n\n\n\nDefine the required throttling (rate limits) settings in postfix main.cf\n\n\nsmtp-gmail_destination_rate_delay = 12s\nsmtp-gmail_destination_concurrency_limit = 1\nsmtp-gmail_destination_recipient_limit = 2\nsmtp-gmail_initial_destination_concurrency=1\n\n\n\nThe syntax is as follows: \ntranstport-name_variable-name=value\n\n\nAdd the following to /etc/postfix/transport\n\n\n/\\@gmail\\.com$/       smtp-gmail:\n\n\n\nThe format of the above file is regexp. Lookups to regexp tables are fast so probably you should use those. For regexp to work you should have regexp support built into postfix. Find out using this command\n\n\npostconf -m\n\n\n\nOnce the transport file is created, make sure to create the corresponding db, which will be actually used by postfix. Use postmap command.\n\n\n  postmap  /etc/postfix/transport\n\n\n\nMake postfix use this transport table. Edit main.cf and add the following:\n\n\ntransport_maps = regexp:/etc/postfix/transport\n\n\n\nMake sure you use regexp prefix.\n\n\nReload postfix\n\n\npostfix reload\n\n\n\ntransport_maps = hash:/etc/postfix/transport, regexp:/etc/postfix/transport_gmail\n\n# cat /etc/postfix/transport_gmail\n/\\@gmail\\.com$/ smtp-gmail:\n\n\n\n\n\nNote\n\n\nNo need to postmap this file\n\n\n\n\nDelay=2s caused transport invocation every 4 seconds in my experience.\n\n\n/etc/postfix/transport\n file  like this:\n\n\n# Yahoo (USA)\nyahoo.com       yahoo:\nymail.com       yahoo:\nrocketmail.com  yahoo:\n\n# Yahoo (INTL)\nyahoo.ae        yahoo:\nyahoo.at        yahoo:\nyahoo.be        yahoo:\nyahoo.ca        yahoo:\nyahoo.ch        yahoo:\nyahoo.cn        yahoo:\nyahoo.co.il     yahoo:\nyahoo.co.in     yahoo:\nyahoo.co.jp     yahoo:\nyahoo.co.kr     yahoo:\nyahoo.co.nz     yahoo:\nyahoo.co.th     yahoo:\nyahoo.co.uk     yahoo:\nyahoo.co.za     yahoo:\nyahoo.com.ar    yahoo:\nyahoo.com.au    yahoo:\nyahoo.com.br    yahoo:\nyahoo.com.cn    yahoo:\nyahoo.com.hk    yahoo:\nyahoo.com.mx    yahoo:\nyahoo.com.my    yahoo:\nyahoo.com.ph    yahoo:\nyahoo.com.sg    yahoo:\nyahoo.com.tr    yahoo:\nyahoo.com.tw    yahoo:\nyahoo.com.vn    yahoo:\nyahoo.cz        yahoo:\nyahoo.de        yahoo:\nyahoo.dk        yahoo:\nyahoo.en        yahoo:\nyahoo.es        yahoo:\nyahoo.fi        yahoo:\nyahoo.fr        yahoo:\nyahoo.gr        yahoo:\nyahoo.ie        yahoo:\nyahoo.it        yahoo:\nyahoo.nl        yahoo:\nyahoo.no        yahoo:\nyahoo.pl        yahoo:\nyahoo.pt        yahoo:\nyahoo.ro        yahoo:\nyahoo.ru        yahoo:\nyahoo.se        yahoo:\n# Yahoo\nymail.com       yahoo:\nrocketmail.com  yahoo:\nyahoo.com   smtpslow:\ngmail.com   smtpslow:\nhotmail.com smtpslow:\naol.com     smtpslow:\ncomcast.com smtpslow:\nlive.com    smtpslow:\nmsn.com     smtpslow:\nsbcglobal.net smtpslow:\nverizon.net     smtpslow:\nbellsouth.net smtpslow:\nyahoo.ca    smtpslow:\ncox.net     smtpslow:\nymail.com   smtpslow:\n\n\n\nOnce you\u2019re done editing the /etc/postfix/transport file (and after every edit from now on), remember to do:\n    # postmap /etc/postfix/transport\n\n\n/etc/postfix/transport.regexp that looks like this:\n\n# Yahoo Wildcards\n/yahoo(\\.[a-z]{2,3}){1,2}$/  yahoo:\n\nyahoo     unix  -       -       n       -       -       smtp\n        -o syslog_name=postfix-yahoo\n\n\n\nBack up your /etc/postfix/main.cf file, then add these lines:\n\n\ntransport_maps = hash:/etc/postfix/transport, regexp:/etc/postfix/transport.regexp\n\nyahoo_initial_destination_concurrency = 1\nyahoo_destination_concurrency_limit = 4\nyahoo_destination_recipient_limit = 2\nyahoo_destination_rate_delay = 1s\n\n\n\nThis tells Postfix to check your /etc/postfix/transport and /etc/postfix/transport.regexp files to look up which domains you\u2019ve mapped to which transport, then it sets four specific configurations for the \u201cyahoo\u201d transport:\n\n\n\n\nyahoo_initial_destination_concurrency = 1\n will start out slowly by only sending one message per SMTP connection to a Yahoo\u2019s MTA.\n\n\nyahoo_destination_concurrency_limit = 4\n after starting out slowly with just 1 message, Postfix will increase to allow up to four messages per SMTP connection to a Yahoo MTA.\n\n\nyahoo_destination_recipient_limit = 2\n will send the same message to no more than 2 recipients at a time\n\n\nyahoo_destination_rate_delay = 1s\n will add a 1 second delay between the messages\n\n\n\n\nfinal version:\n\n\n/pronostic-facile\\.fr/ relay:[ASPMX.L.GOOGLE.COM]\n\n/gmail\\.com/ polite:\n/yahoo\\.com/ turtle:\n/hotmail(\\.[a-z]{2,3}){1,2}$/ polite:\n/live(\\.[a-z]{2,3}){1,2}$/ polite:\n/outlook(\\.[a-z]{2,3}){1,2}$/ polite:\n/aol\\.com/  turtle:\n/yahoo(\\.[a-z]{2,3}){1,2}$/ turtle:\n\n\n\nBasically, you may take the following steps as reference:\n\n\n\n\n\n\nCreate a seperate mail for the destination is yahoo, let\ns name it \nslow\n queue\n(You may search in this mailling list too, someone has asked before)\n\n\n\n\n\n\nAfter Postfix 2.5, set slow_destination_rate_delay for certain period of time for \nslow\n\n    In my case, I set to 300s. That\ns mean 5 mins per delivery to yahoo\n\n\n\n\n\n\nSet slow_destination_concurrency_limit \n slow_destination_recipient_limit for \nslow\n\n    In may case, I set\n   slow_destination_concurrency_limit = 2\n   slow_destination_recipient_limit = 10\n\n\n\n\n\n\nIn Postfix 2.5.5 or earlier, disable defer retry failure giving up limit for \nslow\n.\n    I my case, I set\n   slow_concurrency_failed_cohort_limit = $slow_destination_concurrency_failed_cohort_limit\n   slow_destination_concurrency_failed_cohort_limit = 0\n\n\n\n\n\n\nSTEP 1: SETTING UP THE TRANSPORT MAPS\n\n\nThe first step is to determine which domains you want to treat differently. Obviously, in this example, we\u2019re trying to set up something to eliminate (or at least reduce) Yahoo\u2019s deferrals. So edit the /etc/postfix/transport file and create some maps that tell Postfix exactly which email domains are going to get the special \u201cYahoo\u201d treatment. The email domain goes on the left, and the name of your custom transport goes on the right (always followed by a colon). The most basic approach would be to specifically list all the Yahoo email domains you want to cover in your /etc/postfix/transport file  like this:\n\n\n# Yahoo (USA) yahoo.com       yahoo: ymail.com       yahoo: rocketmail.com  yahoo:  # Yahoo (INTL) yahoo.ae        yahoo: yahoo.at        yahoo: yahoo.be        yahoo: yahoo.ca        yahoo: yahoo.ch        yahoo: yahoo.cn        yahoo: yahoo.co.il     yahoo: yahoo.co.in     yahoo: yahoo.co.jp     yahoo: yahoo.co.kr     yahoo: yahoo.co.nz     yahoo: yahoo.co.th     yahoo: yahoo.co.uk     yahoo: yahoo.co.za     yahoo: yahoo.com.ar    yahoo: yahoo.com.au    yahoo: yahoo.com.br    yahoo: yahoo.com.cn    yahoo: yahoo.com.hk    yahoo: yahoo.com.mx    yahoo: yahoo.com.my    yahoo: yahoo.com.ph    yahoo: yahoo.com.sg    yahoo: yahoo.com.tr    yahoo: yahoo.com.tw    yahoo: yahoo.com.vn    yahoo: yahoo.cz        yahoo: yahoo.de        yahoo: yahoo.dk        yahoo: yahoo.en        yahoo: yahoo.es        yahoo: yahoo.fi        yahoo: yahoo.fr        yahoo: yahoo.gr        yahoo: yahoo.ie        yahoo: yahoo.it        yahoo: yahoo.nl        yahoo: yahoo.no        yahoo: yahoo.pl        yahoo: yahoo.pt        yahoo: yahoo.ro        yahoo: yahoo.ru        yahoo: yahoo.se        yahoo:\n\n\n\nHowever, listing all those domains forces you to stay up to date with any new domains that Yahoo might launch. So a smarter approach would be to two transport maps: one that\u2019s a regular hash table, and another with a regular expression that simply catches any domain that starts with yahoo.\nFirst, put ymail.com and rocketmail.com in your /etc/postfix/transport file, like this:\n\n\n# Yahoo ymail.com\nyahoo: rocketmail.com  yahoo:\n\n\n\nOnce you\u2019re done editing the /etc/postfix/transport file (and after every edit from now on), remember to do:\n\n\npostmap /etc/postfix/transport\n\n\n\nto build the transport.db file.\nNext, create a file called /etc/postfix/transport.regexp that looks like this:\n\n\nYahoo Wildcards /yahoo(.[a-z]{2,3}){1,2}$/  yahoo:\n\n\nThat will catch all \u201cyahoo dot anything\u201d domains. Note that you don\u2019t need to run postmap on regular expression tables, so now you\u2019re ready to tell Postfix how to read your transports.\nStep 2: Include the New Custom Transports in master.cf\nAs always, before messing with /etc/postfix/master.cf, make a backup. Then add the following lines at the bottom:\nyahoo     unix  -       -       n       -       -       smtp         -o syslog_name=postfix-yahoo\n-o smtp_connect_timeout=5 -o smtp_helo_timeout=5\n\n\nThis tells Postfix that the transport called \u201cyahoo\u201d gets handed off to the Postfix smtp process, and the -o syslog_name option tags the use of this transport in the mail log so I easily tell when this transport is used.\nStep 3: Create Custom Settings in main.cf\nThe third step of the process is to create some custom settings in your main.cf file to tell Postfix exactly what to do differently when it encounters an outbound mail domain that matches your transport maps. Back up your /etc/postfix/main.cf file, then add these lines:\ntransport_maps = hash:/etc/postfix/transport, regexp:/etc/postfix/transport.regexp  yahoo_initial_destination_concurrency = 1 yahoo_destination_concurrency_limit = 4 yahoo_destination_recipient_limit = 2\nyahoo_destination_rate_delay = 1s\nThis tells Postfix to check your /etc/postfix/transport and/etc/postfix/transport.regexp files to look up which domains you\u2019ve mapped to which transport, then it sets four specific configurations for the \u201cyahoo\u201d transport:\n\u2022   yahoo_initial_destination_concurrency = 1 will start out slowly by only sending one message per SMTP connection to a Yahoo\u2019s MTA.\n\u2022   yahoo_destination_concurrency_limit = 4 after starting out slowly with just 1 message, Postfix will increase to allow up to four messages per SMTP connection to a Yahoo MTA.\n\u2022   yahoo_destination_recipient_limit = 2 will send the same message to no more than 2 recipients at a time\n\u2022   yahoo_destination_rate_delay = 1s will add a 1 second delay between the messages\nThis is where the Postfix voodoo kicks in for me, so feel free to experiment with these settings and tweak to your liking. The destination concurrency limit and the rate delay are the two you\u2019ll probably want to tinker to keep Yahoo happy. Depending on your mailer reputation, they\u2019ll be more strict or more relaxed on what they\u2019ll allow for these two settings. The above settings that happen to work for my needs, but I still tweak them to experiment, and if you have a configuration that works well with Yahoo (or if you have other custom transports that help increase delivery), please feel free to share them in the comments.\nStep 4: Restart Postfix and Test\nNow you\u2019re ready to try things out. Start the Postfix configuration with:\n\n\nservice postfix restart\n\n\nYou can\u2019t just do a postfix reload, because changes to the master.cf require a full restart. Finally, do a tail -f on your maillog. On my CentOS system, that\u2019s:\n tail -f /var/log/maillog\nNow send a message to a Yahoo test account (I\u2019m assuming you have an @yahoo.com test account) from or through your Postfix server. If everything worked right, you should see log entries that start with the date, local hostname, and then say postfix-yahoo/smtp. These are the messages that are being diverted through your new transport!\nAfter using these settings for a few mailings, I\u2019ve seen a drastic reduction in the amount of time it takes to deliver tens of thousands of opt-in email to Yahoo recipients. Hopefully, they\u2019ll work for you, too!\nYour feedback and comments are welcome below, and I\u2019m especially interested to hear of any other custom transports you may be using, as well as your experiences with different settings for Yahoo.\n\u2003\nLa file des messages se rempli alors tr\u00e8s rapidement pour monter facilement \u00e0 plusieurs dizaine de milliers de mails en attente d\u2019envoi et surtout totalement bloqu\u00e9s !\nAutre souci les mails sont en status deferred, et seront donc supprim\u00e9 de la file dans un d\u00e9lai de 5 jours par d\u00e9faut (voir la configuration demaximal_queue_lifetime). C\u2019est insuffisant pour laisser s\u2019\u00e9couler les mails en attente !\nPour les serveurs de mail que je g\u00e8re j\u2019ai \u00ab bidouill\u00e9 \u00bb un script pour vider manuellement la queue pour les mails destin\u00e9s \u00e0 Orange/Wanadoo afin que les personnes aient leur mail au plus t\u00f4t !\nMais il fallait trouver une solution plus durable\u2026\nJ\u2019en ai mise une en place, elle n\u2019est pas parfaite mais elle a permis de g\u00e9rer et de d\u00e9livrer les mailings de ces f\u00eates de fin d\u2019ann\u00e9e en temps et en heure !\nD\u00e9tails de la solution : transport sp\u00e9cifique pour orange/wanadoo\n/etc/postfix/transport\n\n\nwanadoo.com slow:\nwanadoo.fr slow:\norange.com slow:\norange.fr slow:\npuis postmap /etc/postfix/transport\ndans /etc/postfix/master.cf\n\n#==========================================================================\n# service type private unpriv chroot wakeup maxproc command + args\n# (yes) (yes) (yes) (never) (100)\n#==========================================================================\nslow unix - - n - 5 smtp\n-o syslog_name=postfix-slow\n-o smtp_destination_concurrency_limit=3\n-o slow_destination_rate_delay=1\ndans /etc/postfix/main.cf\n\nslow_destination_recipient_limit = 20\nslow_destination_concurrency_limit = 2\net finalement : /etc/init.d/postfix reload\nLes mails se stockent tout de m\u00eame en queue, mais la file se vide ensuite relativement rapidement !\norange_destination_recipient_limit = 20\norange_destination_concurrency_limit = 2\norange_destination_concurrency_limit = 3\norange_destination_rate_delay = 1s", 
            "title": "6. Rate Limiting"
        }, 
        {
            "location": "/rate_limiting/#61-add-policies-in-etcpostfixmastercf", 
            "text": "polite unix - - n - - smtp\nturtle unix - - n - - smtp    Map domain to its transport name. For this add the following to  /etc/postfix/transport  gmail.com polite:\nyahoo.com turtle:\nhotmail.com polite:\naol.com turtle:    Modify postfix configuration to specify the rate limit,  postconf -e  polite_destination_concurrency_limit = 4 \npostconf -e  polite_destination_rate_delay = 0 \npostconf -e  polite_destination_recipient_limit = 10 \npostconf -e  turtle_destination_rate_delay = 3s \npostconf -e  turtle_destination_concurrency_limit = 20 \npostconf -e  turtle_destination_recipient_limit = 4    Restart postfix  service postfix restart  other solution  Now, define required additional transport in postfix master.cf file:  smtp-gmail unix -    -    n    -    1    smtp\n      -o syslog_name=smtp-gmail  Define the required throttling (rate limits) settings in postfix main.cf  smtp-gmail_destination_rate_delay = 12s\nsmtp-gmail_destination_concurrency_limit = 1\nsmtp-gmail_destination_recipient_limit = 2\nsmtp-gmail_initial_destination_concurrency=1  The syntax is as follows:  transtport-name_variable-name=value  Add the following to /etc/postfix/transport  /\\@gmail\\.com$/       smtp-gmail:  The format of the above file is regexp. Lookups to regexp tables are fast so probably you should use those. For regexp to work you should have regexp support built into postfix. Find out using this command  postconf -m  Once the transport file is created, make sure to create the corresponding db, which will be actually used by postfix. Use postmap command.    postmap  /etc/postfix/transport  Make postfix use this transport table. Edit main.cf and add the following:  transport_maps = regexp:/etc/postfix/transport  Make sure you use regexp prefix.  Reload postfix  postfix reload\n\n\n\ntransport_maps = hash:/etc/postfix/transport, regexp:/etc/postfix/transport_gmail\n\n# cat /etc/postfix/transport_gmail\n/\\@gmail\\.com$/ smtp-gmail:   Note  No need to postmap this file   Delay=2s caused transport invocation every 4 seconds in my experience.  /etc/postfix/transport  file  like this:  # Yahoo (USA)\nyahoo.com       yahoo:\nymail.com       yahoo:\nrocketmail.com  yahoo:\n\n# Yahoo (INTL)\nyahoo.ae        yahoo:\nyahoo.at        yahoo:\nyahoo.be        yahoo:\nyahoo.ca        yahoo:\nyahoo.ch        yahoo:\nyahoo.cn        yahoo:\nyahoo.co.il     yahoo:\nyahoo.co.in     yahoo:\nyahoo.co.jp     yahoo:\nyahoo.co.kr     yahoo:\nyahoo.co.nz     yahoo:\nyahoo.co.th     yahoo:\nyahoo.co.uk     yahoo:\nyahoo.co.za     yahoo:\nyahoo.com.ar    yahoo:\nyahoo.com.au    yahoo:\nyahoo.com.br    yahoo:\nyahoo.com.cn    yahoo:\nyahoo.com.hk    yahoo:\nyahoo.com.mx    yahoo:\nyahoo.com.my    yahoo:\nyahoo.com.ph    yahoo:\nyahoo.com.sg    yahoo:\nyahoo.com.tr    yahoo:\nyahoo.com.tw    yahoo:\nyahoo.com.vn    yahoo:\nyahoo.cz        yahoo:\nyahoo.de        yahoo:\nyahoo.dk        yahoo:\nyahoo.en        yahoo:\nyahoo.es        yahoo:\nyahoo.fi        yahoo:\nyahoo.fr        yahoo:\nyahoo.gr        yahoo:\nyahoo.ie        yahoo:\nyahoo.it        yahoo:\nyahoo.nl        yahoo:\nyahoo.no        yahoo:\nyahoo.pl        yahoo:\nyahoo.pt        yahoo:\nyahoo.ro        yahoo:\nyahoo.ru        yahoo:\nyahoo.se        yahoo:\n# Yahoo\nymail.com       yahoo:\nrocketmail.com  yahoo:\nyahoo.com   smtpslow:\ngmail.com   smtpslow:\nhotmail.com smtpslow:\naol.com     smtpslow:\ncomcast.com smtpslow:\nlive.com    smtpslow:\nmsn.com     smtpslow:\nsbcglobal.net smtpslow:\nverizon.net     smtpslow:\nbellsouth.net smtpslow:\nyahoo.ca    smtpslow:\ncox.net     smtpslow:\nymail.com   smtpslow:  Once you\u2019re done editing the /etc/postfix/transport file (and after every edit from now on), remember to do:\n    # postmap /etc/postfix/transport  /etc/postfix/transport.regexp that looks like this:\n\n# Yahoo Wildcards\n/yahoo(\\.[a-z]{2,3}){1,2}$/  yahoo:\n\nyahoo     unix  -       -       n       -       -       smtp\n        -o syslog_name=postfix-yahoo  Back up your /etc/postfix/main.cf file, then add these lines:  transport_maps = hash:/etc/postfix/transport, regexp:/etc/postfix/transport.regexp\n\nyahoo_initial_destination_concurrency = 1\nyahoo_destination_concurrency_limit = 4\nyahoo_destination_recipient_limit = 2\nyahoo_destination_rate_delay = 1s  This tells Postfix to check your /etc/postfix/transport and /etc/postfix/transport.regexp files to look up which domains you\u2019ve mapped to which transport, then it sets four specific configurations for the \u201cyahoo\u201d transport:   yahoo_initial_destination_concurrency = 1  will start out slowly by only sending one message per SMTP connection to a Yahoo\u2019s MTA.  yahoo_destination_concurrency_limit = 4  after starting out slowly with just 1 message, Postfix will increase to allow up to four messages per SMTP connection to a Yahoo MTA.  yahoo_destination_recipient_limit = 2  will send the same message to no more than 2 recipients at a time  yahoo_destination_rate_delay = 1s  will add a 1 second delay between the messages   final version:  /pronostic-facile\\.fr/ relay:[ASPMX.L.GOOGLE.COM]\n\n/gmail\\.com/ polite:\n/yahoo\\.com/ turtle:\n/hotmail(\\.[a-z]{2,3}){1,2}$/ polite:\n/live(\\.[a-z]{2,3}){1,2}$/ polite:\n/outlook(\\.[a-z]{2,3}){1,2}$/ polite:\n/aol\\.com/  turtle:\n/yahoo(\\.[a-z]{2,3}){1,2}$/ turtle:  Basically, you may take the following steps as reference:    Create a seperate mail for the destination is yahoo, let s name it  slow  queue\n(You may search in this mailling list too, someone has asked before)    After Postfix 2.5, set slow_destination_rate_delay for certain period of time for  slow \n    In my case, I set to 300s. That s mean 5 mins per delivery to yahoo    Set slow_destination_concurrency_limit   slow_destination_recipient_limit for  slow \n    In may case, I set\n   slow_destination_concurrency_limit = 2\n   slow_destination_recipient_limit = 10    In Postfix 2.5.5 or earlier, disable defer retry failure giving up limit for  slow .\n    I my case, I set\n   slow_concurrency_failed_cohort_limit = $slow_destination_concurrency_failed_cohort_limit\n   slow_destination_concurrency_failed_cohort_limit = 0", 
            "title": "6.1. Add policies in /etc/postfix/master.cf"
        }, 
        {
            "location": "/rate_limiting/#step-1-setting-up-the-transport-maps", 
            "text": "The first step is to determine which domains you want to treat differently. Obviously, in this example, we\u2019re trying to set up something to eliminate (or at least reduce) Yahoo\u2019s deferrals. So edit the /etc/postfix/transport file and create some maps that tell Postfix exactly which email domains are going to get the special \u201cYahoo\u201d treatment. The email domain goes on the left, and the name of your custom transport goes on the right (always followed by a colon). The most basic approach would be to specifically list all the Yahoo email domains you want to cover in your /etc/postfix/transport file  like this:  # Yahoo (USA) yahoo.com       yahoo: ymail.com       yahoo: rocketmail.com  yahoo:  # Yahoo (INTL) yahoo.ae        yahoo: yahoo.at        yahoo: yahoo.be        yahoo: yahoo.ca        yahoo: yahoo.ch        yahoo: yahoo.cn        yahoo: yahoo.co.il     yahoo: yahoo.co.in     yahoo: yahoo.co.jp     yahoo: yahoo.co.kr     yahoo: yahoo.co.nz     yahoo: yahoo.co.th     yahoo: yahoo.co.uk     yahoo: yahoo.co.za     yahoo: yahoo.com.ar    yahoo: yahoo.com.au    yahoo: yahoo.com.br    yahoo: yahoo.com.cn    yahoo: yahoo.com.hk    yahoo: yahoo.com.mx    yahoo: yahoo.com.my    yahoo: yahoo.com.ph    yahoo: yahoo.com.sg    yahoo: yahoo.com.tr    yahoo: yahoo.com.tw    yahoo: yahoo.com.vn    yahoo: yahoo.cz        yahoo: yahoo.de        yahoo: yahoo.dk        yahoo: yahoo.en        yahoo: yahoo.es        yahoo: yahoo.fi        yahoo: yahoo.fr        yahoo: yahoo.gr        yahoo: yahoo.ie        yahoo: yahoo.it        yahoo: yahoo.nl        yahoo: yahoo.no        yahoo: yahoo.pl        yahoo: yahoo.pt        yahoo: yahoo.ro        yahoo: yahoo.ru        yahoo: yahoo.se        yahoo:  However, listing all those domains forces you to stay up to date with any new domains that Yahoo might launch. So a smarter approach would be to two transport maps: one that\u2019s a regular hash table, and another with a regular expression that simply catches any domain that starts with yahoo.\nFirst, put ymail.com and rocketmail.com in your /etc/postfix/transport file, like this:  # Yahoo ymail.com\nyahoo: rocketmail.com  yahoo:  Once you\u2019re done editing the /etc/postfix/transport file (and after every edit from now on), remember to do:  postmap /etc/postfix/transport  to build the transport.db file.\nNext, create a file called /etc/postfix/transport.regexp that looks like this:", 
            "title": "STEP 1: SETTING UP THE TRANSPORT MAPS"
        }, 
        {
            "location": "/rate_limiting/#yahoo-wildcards-yahoo46a-z2312-yahoo", 
            "text": "That will catch all \u201cyahoo dot anything\u201d domains. Note that you don\u2019t need to run postmap on regular expression tables, so now you\u2019re ready to tell Postfix how to read your transports.\nStep 2: Include the New Custom Transports in master.cf\nAs always, before messing with /etc/postfix/master.cf, make a backup. Then add the following lines at the bottom:\nyahoo     unix  -       -       n       -       -       smtp         -o syslog_name=postfix-yahoo\n-o smtp_connect_timeout=5 -o smtp_helo_timeout=5  This tells Postfix that the transport called \u201cyahoo\u201d gets handed off to the Postfix smtp process, and the -o syslog_name option tags the use of this transport in the mail log so I easily tell when this transport is used.\nStep 3: Create Custom Settings in main.cf\nThe third step of the process is to create some custom settings in your main.cf file to tell Postfix exactly what to do differently when it encounters an outbound mail domain that matches your transport maps. Back up your /etc/postfix/main.cf file, then add these lines:\ntransport_maps = hash:/etc/postfix/transport, regexp:/etc/postfix/transport.regexp  yahoo_initial_destination_concurrency = 1 yahoo_destination_concurrency_limit = 4 yahoo_destination_recipient_limit = 2\nyahoo_destination_rate_delay = 1s\nThis tells Postfix to check your /etc/postfix/transport and/etc/postfix/transport.regexp files to look up which domains you\u2019ve mapped to which transport, then it sets four specific configurations for the \u201cyahoo\u201d transport:\n\u2022   yahoo_initial_destination_concurrency = 1 will start out slowly by only sending one message per SMTP connection to a Yahoo\u2019s MTA.\n\u2022   yahoo_destination_concurrency_limit = 4 after starting out slowly with just 1 message, Postfix will increase to allow up to four messages per SMTP connection to a Yahoo MTA.\n\u2022   yahoo_destination_recipient_limit = 2 will send the same message to no more than 2 recipients at a time\n\u2022   yahoo_destination_rate_delay = 1s will add a 1 second delay between the messages\nThis is where the Postfix voodoo kicks in for me, so feel free to experiment with these settings and tweak to your liking. The destination concurrency limit and the rate delay are the two you\u2019ll probably want to tinker to keep Yahoo happy. Depending on your mailer reputation, they\u2019ll be more strict or more relaxed on what they\u2019ll allow for these two settings. The above settings that happen to work for my needs, but I still tweak them to experiment, and if you have a configuration that works well with Yahoo (or if you have other custom transports that help increase delivery), please feel free to share them in the comments.\nStep 4: Restart Postfix and Test\nNow you\u2019re ready to try things out. Start the Postfix configuration with:", 
            "title": "Yahoo Wildcards /yahoo(.[a-z]{2,3}){1,2}$/  yahoo:"
        }, 
        {
            "location": "/rate_limiting/#service-postfix-restart", 
            "text": "You can\u2019t just do a postfix reload, because changes to the master.cf require a full restart. Finally, do a tail -f on your maillog. On my CentOS system, that\u2019s:\n tail -f /var/log/maillog\nNow send a message to a Yahoo test account (I\u2019m assuming you have an @yahoo.com test account) from or through your Postfix server. If everything worked right, you should see log entries that start with the date, local hostname, and then say postfix-yahoo/smtp. These are the messages that are being diverted through your new transport!\nAfter using these settings for a few mailings, I\u2019ve seen a drastic reduction in the amount of time it takes to deliver tens of thousands of opt-in email to Yahoo recipients. Hopefully, they\u2019ll work for you, too!\nYour feedback and comments are welcome below, and I\u2019m especially interested to hear of any other custom transports you may be using, as well as your experiences with different settings for Yahoo.\n\u2003\nLa file des messages se rempli alors tr\u00e8s rapidement pour monter facilement \u00e0 plusieurs dizaine de milliers de mails en attente d\u2019envoi et surtout totalement bloqu\u00e9s !\nAutre souci les mails sont en status deferred, et seront donc supprim\u00e9 de la file dans un d\u00e9lai de 5 jours par d\u00e9faut (voir la configuration demaximal_queue_lifetime). C\u2019est insuffisant pour laisser s\u2019\u00e9couler les mails en attente !\nPour les serveurs de mail que je g\u00e8re j\u2019ai \u00ab bidouill\u00e9 \u00bb un script pour vider manuellement la queue pour les mails destin\u00e9s \u00e0 Orange/Wanadoo afin que les personnes aient leur mail au plus t\u00f4t !\nMais il fallait trouver une solution plus durable\u2026\nJ\u2019en ai mise une en place, elle n\u2019est pas parfaite mais elle a permis de g\u00e9rer et de d\u00e9livrer les mailings de ces f\u00eates de fin d\u2019ann\u00e9e en temps et en heure !\nD\u00e9tails de la solution : transport sp\u00e9cifique pour orange/wanadoo\n/etc/postfix/transport  wanadoo.com slow:\nwanadoo.fr slow:\norange.com slow:\norange.fr slow:\npuis postmap /etc/postfix/transport\ndans /etc/postfix/master.cf\n\n#==========================================================================\n# service type private unpriv chroot wakeup maxproc command + args\n# (yes) (yes) (yes) (never) (100)\n#==========================================================================\nslow unix - - n - 5 smtp\n-o syslog_name=postfix-slow\n-o smtp_destination_concurrency_limit=3\n-o slow_destination_rate_delay=1\ndans /etc/postfix/main.cf\n\nslow_destination_recipient_limit = 20\nslow_destination_concurrency_limit = 2\net finalement : /etc/init.d/postfix reload\nLes mails se stockent tout de m\u00eame en queue, mais la file se vide ensuite relativement rapidement !\norange_destination_recipient_limit = 20\norange_destination_concurrency_limit = 2\norange_destination_concurrency_limit = 3\norange_destination_rate_delay = 1s", 
            "title": "service postfix restart"
        }, 
        {
            "location": "/ip_rotating/", 
            "text": "7.1. IPTable\n\n\nAdd the following iptable rules for ip rotation\n\n\niptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport 25 -o eth0 -m statistic --mode nth --every 2 --packet 1 -j SNAT --to-source 144.76.113.170\n\niptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport 25 -o eth0 -m statistic --mode nth --every 2 --packet 1 -j SNAT --to-source 144.76.113.185\n\n\n\n7.2. Take backup of current iptable rules\n\n\niptables-save \n /etc/network/iptablerules.txt\n\n\n\n7.3. Add the following line in network service configuration file(ie, /etc/network/interfaces ),\n\n\npost-up iptables-restore \n /etc/network/iptablerules.txt\n\n\n\neg:\n\n\nauto  eth0\niface eth0 inet static\n  address   144.76.113.170\n  broadcast 144.76.113.191\n  netmask   255.255.255.224\n  gateway   144.76.113.161\n\n  post-up iptables-restore \n /etc/network/iptablerules.txt\n\n# default route to access subnet\n\n\n\nup route add -net 144.76.113.160 netmask 255.255.255.224 gw 144.76.113.161 eth0\n\n\nsmtp_bind_address\n directive to use multiple IPs and ip rotation can be achieved with route balancing.", 
            "title": "7. IP Rotating"
        }, 
        {
            "location": "/ip_rotating/#71-iptable", 
            "text": "Add the following iptable rules for ip rotation  iptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport 25 -o eth0 -m statistic --mode nth --every 2 --packet 1 -j SNAT --to-source 144.76.113.170\n\niptables -t nat -I POSTROUTING -m state --state NEW -p tcp --dport 25 -o eth0 -m statistic --mode nth --every 2 --packet 1 -j SNAT --to-source 144.76.113.185", 
            "title": "7.1. IPTable"
        }, 
        {
            "location": "/ip_rotating/#72-take-backup-of-current-iptable-rules", 
            "text": "iptables-save   /etc/network/iptablerules.txt", 
            "title": "7.2. Take backup of current iptable rules"
        }, 
        {
            "location": "/ip_rotating/#73-add-the-following-line-in-network-service-configuration-fileie-etcnetworkinterfaces", 
            "text": "post-up iptables-restore   /etc/network/iptablerules.txt  eg:  auto  eth0\niface eth0 inet static\n  address   144.76.113.170\n  broadcast 144.76.113.191\n  netmask   255.255.255.224\n  gateway   144.76.113.161\n\n  post-up iptables-restore   /etc/network/iptablerules.txt\n\n# default route to access subnet  up route add -net 144.76.113.160 netmask 255.255.255.224 gw 144.76.113.161 eth0  smtp_bind_address  directive to use multiple IPs and ip rotation can be achieved with route balancing.", 
            "title": "7.3. Add the following line in network service configuration file(ie, /etc/network/interfaces ),"
        }, 
        {
            "location": "/authentication/", 
            "text": "8.1. Install necessary services for authentication\n\n\napt-get install sasl2-bin libsasl2-2 -y\n\n\n\n8.2. Correct the permission of smtp authentication related files,\n\n\nchown postfix:sasl /var/run/saslauthd\nchown postfix:sasl /etc/sasldb2\nadduser postfix sasl\n/etc/init.d/postfix restart\n\n\n\n8.3. Create configuration files for SMTP authentication\n\n\ncat \n /etc/default/saslauthd \nEOF\nSTART=yes\nDESC=\"SASL Authentication Daemon\"\nNAME=\"saslauthd\"\nMECHANISMS=\"sasldb\"\nMECH_OPTIONS=\"\"\nTHREADS=5\nOPTIONS=\"-c -m /var/spool/postfix/var/run/saslauthd\"\nEOF\n\ncat \n /etc/postfix/sasl/smtpd.conf \nEOF\npwcheck_method: saslauthd\nauxprop_plugin: sasldb\nsaslauthd_path: /var/run/saslauthd/mux\nmech_list: PLAIN LOGIN CRAM-MD5 DIGEST-MD5\nEOF\n\n\n\n8.4. Configure postfix to use sasldb for SMTP authentication,\n\n\npostconf -e \"smtpd_sasl_local_domain=pronostic-facile.fr\"\npostconf -e \"smtpd_sasl_auth_enable=yes\"\npostconf -e \"smtpd_sasl_path=smtpd\"\npostconf -e \"smtpd_sasl_tls_security_options= noanonymous, noplaintext\"\npostconf -e \"broken_sasl_auth_clients=yes\"\n\n/etc/init.d/saslauthd restart\n/etc/init.d/postfix restart\n\n\n\n8.5. Create email user\n\n\nsaslpasswd2 -c -u pronostic-facile.fr -f /etc/sasldb2 contact\n\nPassword: 6523uu3FuWooM22\n\n\n\n8.6. Testing\n\n\nCreate password hash\n\n\nperl -MMIME::Base64 -e 'print encode_base64(\"\\000contact\\@pronostic-facile.fr\\0006523uu3FuWooM22\");'dXNlcjEAdXNlcjEAWmRFeG1ocGRiclBsbw==\n\n\n\nSend test email\n\n\ntelnet 0 25\n\nTrying 0.0.0.0...\nConnected to 0.\nEscape character is '^]'.\n220 pronostic-facile.fr ESMTP Postfix (Ubuntu)\n\nEHLO pronostic-facile.fr\n\n250-pronostic-facile.fr\n250-PIPELINING\n250-SIZE 10240000\n250-VRFY\n250-ETRN\n250-STARTTLS\n250-AUTH PLAIN LOGIN CRAM-MD5 DIGEST-MD5\n250-AUTH=PLAIN LOGIN CRAM-MD5 DIGEST-MD5\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250 DSN\nAUTH PLAIN AGNvbnRhY3RAcHJvbm9zdGljLWZhY2lsZS5mcgA2NTIzdXUzRnVXb29NMjI=\n235 2.7.0 Authentication successful\nMAIL FROM: contact@pronostic-facile.fr\n250 2.1.0 Ok\nRCPT TO: rnldpj@gmail.com\n250 2.1.5 Ok\nDATA\n354 End data with \nCR\nLF\n.\nCR\nLF\n\nSubject: Testing EMAIL\nThis is a testing. Plz ignore.\n.\n250 2.0.0 Ok: queued as CDC8A4095F\n421 4.4.2 pronostic-facile.fr Error: timeout exceeded\nConnection closed by foreign host.", 
            "title": "8. Authentication"
        }, 
        {
            "location": "/authentication/#81-install-necessary-services-for-authentication", 
            "text": "apt-get install sasl2-bin libsasl2-2 -y", 
            "title": "8.1. Install necessary services for authentication"
        }, 
        {
            "location": "/authentication/#82-correct-the-permission-of-smtp-authentication-related-files", 
            "text": "chown postfix:sasl /var/run/saslauthd\nchown postfix:sasl /etc/sasldb2\nadduser postfix sasl\n/etc/init.d/postfix restart", 
            "title": "8.2. Correct the permission of smtp authentication related files,"
        }, 
        {
            "location": "/authentication/#83-create-configuration-files-for-smtp-authentication", 
            "text": "cat   /etc/default/saslauthd  EOF\nSTART=yes\nDESC=\"SASL Authentication Daemon\"\nNAME=\"saslauthd\"\nMECHANISMS=\"sasldb\"\nMECH_OPTIONS=\"\"\nTHREADS=5\nOPTIONS=\"-c -m /var/spool/postfix/var/run/saslauthd\"\nEOF\n\ncat   /etc/postfix/sasl/smtpd.conf  EOF\npwcheck_method: saslauthd\nauxprop_plugin: sasldb\nsaslauthd_path: /var/run/saslauthd/mux\nmech_list: PLAIN LOGIN CRAM-MD5 DIGEST-MD5\nEOF", 
            "title": "8.3. Create configuration files for SMTP authentication"
        }, 
        {
            "location": "/authentication/#84-configure-postfix-to-use-sasldb-for-smtp-authentication", 
            "text": "postconf -e \"smtpd_sasl_local_domain=pronostic-facile.fr\"\npostconf -e \"smtpd_sasl_auth_enable=yes\"\npostconf -e \"smtpd_sasl_path=smtpd\"\npostconf -e \"smtpd_sasl_tls_security_options= noanonymous, noplaintext\"\npostconf -e \"broken_sasl_auth_clients=yes\"\n\n/etc/init.d/saslauthd restart\n/etc/init.d/postfix restart", 
            "title": "8.4. Configure postfix to use sasldb for SMTP authentication,"
        }, 
        {
            "location": "/authentication/#85-create-email-user", 
            "text": "saslpasswd2 -c -u pronostic-facile.fr -f /etc/sasldb2 contact\n\nPassword: 6523uu3FuWooM22", 
            "title": "8.5. Create email user"
        }, 
        {
            "location": "/authentication/#86-testing", 
            "text": "Create password hash  perl -MMIME::Base64 -e 'print encode_base64(\"\\000contact\\@pronostic-facile.fr\\0006523uu3FuWooM22\");'dXNlcjEAdXNlcjEAWmRFeG1ocGRiclBsbw==  Send test email  telnet 0 25\n\nTrying 0.0.0.0...\nConnected to 0.\nEscape character is '^]'.\n220 pronostic-facile.fr ESMTP Postfix (Ubuntu)\n\nEHLO pronostic-facile.fr\n\n250-pronostic-facile.fr\n250-PIPELINING\n250-SIZE 10240000\n250-VRFY\n250-ETRN\n250-STARTTLS\n250-AUTH PLAIN LOGIN CRAM-MD5 DIGEST-MD5\n250-AUTH=PLAIN LOGIN CRAM-MD5 DIGEST-MD5\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250 DSN\nAUTH PLAIN AGNvbnRhY3RAcHJvbm9zdGljLWZhY2lsZS5mcgA2NTIzdXUzRnVXb29NMjI=\n235 2.7.0 Authentication successful\nMAIL FROM: contact@pronostic-facile.fr\n250 2.1.0 Ok\nRCPT TO: rnldpj@gmail.com\n250 2.1.5 Ok\nDATA\n354 End data with  CR LF . CR LF \nSubject: Testing EMAIL\nThis is a testing. Plz ignore.\n.\n250 2.0.0 Ok: queued as CDC8A4095F\n421 4.4.2 pronostic-facile.fr Error: timeout exceeded\nConnection closed by foreign host.", 
            "title": "8.6. Testing"
        }, 
        {
            "location": "/multidomain/", 
            "text": "mydestination = /etc/postfix/virtual/domains\n\n\n\nTO BE DONE", 
            "title": "9. Multidomain"
        }, 
        {
            "location": "/whitelisting/", 
            "text": "Whitelisting\n\n\n\n\nImportant steps\n\n\n\n\nFBL (FeedBack Loops)\n\n\nWarming Up\n\n\nWhitelisting\n\n\n\n\nAOL WHITELISTENING\n\n\nURL : http://postmaster.aol.com/cgi-bin/wh\nlist_guides.pl\n\n\nIt\ns very easy to get on their whitelist, but if they get tons of spam complains about your message, you will be removed to blacklist list very fast ^^\n\n\nYAHOO WHITELISTENING\n\n\nURL : http://help.yahoo.com/l/us/yahoo/mai\ner/bulkv2.html\nhttp://help.yahoo.com/l/qe/snova/mail/postmaster/defer.html\n\n\nhttps://help.yahoo.com/kb/postmaster/complaint-feedback-loop-sln3438.html\nIt\ns hard to get whitelisted on Yahoo, but give it a try.\n\n\nHOTMAIL WHITELISTENING\n\n\nURL : https://support.msn.com/eform.aspx?p\nrpp\nct=eformts\nhttps://mail.live.com/mail/postmaster.aspx\nhttps://postmaster.live.com/snds/\n\n\nSPAM FILTERS WHERE YOU CAN ASK FOR WHITELISTENING\n\n\nhttp://ipremoval.sms.symantec.com/lookup/\n- http://v4bl.org/\n\n\nhttp://www.spamhauswhitelist.com/en/ - only with invite, so it\ns almost impossible to get there, but it\ns worth if you can\n\n\nChecking:\nhttp://multirbl.valli.org/\n\n\nhttps://www.evernote.com/shard/s11/nl/1281903/fc45a5aa-7acd-4695-98df-92597e7180e2/", 
            "title": "10. Whitelisting"
        }, 
        {
            "location": "/whitelisting/#aol-whitelistening", 
            "text": "URL : http://postmaster.aol.com/cgi-bin/wh list_guides.pl  It s very easy to get on their whitelist, but if they get tons of spam complains about your message, you will be removed to blacklist list very fast ^^", 
            "title": "AOL WHITELISTENING"
        }, 
        {
            "location": "/whitelisting/#yahoo-whitelistening", 
            "text": "URL : http://help.yahoo.com/l/us/yahoo/mai er/bulkv2.html\nhttp://help.yahoo.com/l/qe/snova/mail/postmaster/defer.html  https://help.yahoo.com/kb/postmaster/complaint-feedback-loop-sln3438.html\nIt s hard to get whitelisted on Yahoo, but give it a try.", 
            "title": "YAHOO WHITELISTENING"
        }, 
        {
            "location": "/whitelisting/#hotmail-whitelistening", 
            "text": "URL : https://support.msn.com/eform.aspx?p rpp ct=eformts\nhttps://mail.live.com/mail/postmaster.aspx\nhttps://postmaster.live.com/snds/", 
            "title": "HOTMAIL WHITELISTENING"
        }, 
        {
            "location": "/whitelisting/#spam-filters-where-you-can-ask-for-whitelistening", 
            "text": "http://ipremoval.sms.symantec.com/lookup/\n- http://v4bl.org/  http://www.spamhauswhitelist.com/en/ - only with invite, so it s almost impossible to get there, but it s worth if you can  Checking:\nhttp://multirbl.valli.org/  https://www.evernote.com/shard/s11/nl/1281903/fc45a5aa-7acd-4695-98df-92597e7180e2/", 
            "title": "SPAM FILTERS WHERE YOU CAN ASK FOR WHITELISTENING"
        }, 
        {
            "location": "/advanced_setup/", 
            "text": "load balancing with HAProxy\n\n\nFor SMTP, it is really important to know the client IP, since we use it most of the time through RBL to fight spam.\nFor security purpose as well: we may want to allow only some hosts to use our SMTP relays and block any other clients.\nWithout the proxy protocol, the load-balancer will hide the client IP with its own IP. You would have to maintain whitelists into the load-balancer (which is doable). Thanks to proxy protocol, Postscreen would be aware of the client IP, it means you could maintain lists directly into the MTA.\n\n\nSECURITY\n\n\nTo see if an outsider can reach you, run this command:\n\n\ntelnet relay-test.mail-abuse.org\nhost relay-test.mail-abuse.org\n\n\n\nWhen you make this connection, relay-test.mail-abuse.org performs an online relay test of the machine that made the connection. If your ISP (or your own firewall) doesn\nt block incoming connections to your box on port 25, then you should see quite a few messages in your log file.\n\n\nnetstat -t -a | grep LISTEN\n\nlsof -i tcp:25\n\n\n\nTest\n\n\nNow let\ns turn our attention to smtp-sink to find out how many messages per second your server can handle from your horrible mass mailing sofware. Postfix has to process each outgoing message even if the server on the other side throws it away (therefore, you can\nt use this to test the raw performance of your mass mailer unless you connect your mailer directly to smtp-sink).\n\n\nThe following example sets up an SMTP listener on port 25 of localhost:\n\n\n./smtp-sink -c localhost:25 1000\n\n\n\nNow you can run your client tests.\n\n\nIf you want to get an idea for how much overhead the network imposes and also get a control experiment to see what the theoretical maximum throughput for a mail server, you can make smtp-source and smtp-sink talk to each other. Open two windows. In the first, start up the dummy server like this:\n\n\n./smtp-sink -c localhost:25 1000 100\n\n\n\nWith this in place, start throwing messages at this server with smtp-source in the other window:\n\n\ntime ./smtp-source -s 20 -l 5120 -m 100 -c -f sender@example.com -t recipient@example.com localhost:25 100\n\nreal    0m0.239s\nuser    0m0.000s\nsys     0m0.040s\n\n\n\nInstall Local DNS server\n\n\nImprove domain lookup and cache", 
            "title": "11. Advanced Setup"
        }, 
        {
            "location": "/advanced_setup/#load-balancing-with-haproxy", 
            "text": "For SMTP, it is really important to know the client IP, since we use it most of the time through RBL to fight spam.\nFor security purpose as well: we may want to allow only some hosts to use our SMTP relays and block any other clients.\nWithout the proxy protocol, the load-balancer will hide the client IP with its own IP. You would have to maintain whitelists into the load-balancer (which is doable). Thanks to proxy protocol, Postscreen would be aware of the client IP, it means you could maintain lists directly into the MTA.", 
            "title": "load balancing with HAProxy"
        }, 
        {
            "location": "/advanced_setup/#security", 
            "text": "To see if an outsider can reach you, run this command:  telnet relay-test.mail-abuse.org\nhost relay-test.mail-abuse.org  When you make this connection, relay-test.mail-abuse.org performs an online relay test of the machine that made the connection. If your ISP (or your own firewall) doesn t block incoming connections to your box on port 25, then you should see quite a few messages in your log file.  netstat -t -a | grep LISTEN\n\nlsof -i tcp:25", 
            "title": "SECURITY"
        }, 
        {
            "location": "/advanced_setup/#test", 
            "text": "Now let s turn our attention to smtp-sink to find out how many messages per second your server can handle from your horrible mass mailing sofware. Postfix has to process each outgoing message even if the server on the other side throws it away (therefore, you can t use this to test the raw performance of your mass mailer unless you connect your mailer directly to smtp-sink).  The following example sets up an SMTP listener on port 25 of localhost:  ./smtp-sink -c localhost:25 1000  Now you can run your client tests.  If you want to get an idea for how much overhead the network imposes and also get a control experiment to see what the theoretical maximum throughput for a mail server, you can make smtp-source and smtp-sink talk to each other. Open two windows. In the first, start up the dummy server like this:  ./smtp-sink -c localhost:25 1000 100  With this in place, start throwing messages at this server with smtp-source in the other window:  time ./smtp-source -s 20 -l 5120 -m 100 -c -f sender@example.com -t recipient@example.com localhost:25 100\n\nreal    0m0.239s\nuser    0m0.000s\nsys     0m0.040s", 
            "title": "Test"
        }, 
        {
            "location": "/advanced_setup/#install-local-dns-server", 
            "text": "Improve domain lookup and cache", 
            "title": "Install Local DNS server"
        }, 
        {
            "location": "/monitoring/", 
            "text": "Mailgraph And pflogsumm\n\n\nWant to support HowtoForge? Become a subscriber!\nSubmitted by falko (Contact Author) (Forums) on Mon, 2006-07-03 15:58. ::\n\n\n4 Fedora Core 5\n4.1 Mailgraph\n\n\nThere\ns no Mailgraph package available for Fedora Core 5, so we must install it manually. First, we need to install the prerequsities that Mailgraph requires:\n\n\nyum install rrdtool rrdtool-perl perl-File-Tail\n\n\n\nThen we download the Mailgraph sources and copy the Mailgraph scripts to the appropriate locations:\n\n\ncd /tmp\u2028wget http://people.ee.ethz.ch/~dws/software/mailgraph/pub/mailgraph-1.12.tar.gz\u2028tar xvfz mailgraph-1.12.tar.gz\u2028cd mailgraph-1.12\u2028mv mailgraph.pl /usr/local/bin/mailgraph.pl\u2028mv mailgraph-init /etc/init.d/mailgraph\n\n\n\nNow we must adjust the Mailgraph init script /etc/init.d/mailgraph:\n\n\nvi /etc/init.d/mailgraph\n\n\n\nOn Fedora, the Postfix mail log is /var/log/maillog, so we change\n\n\nMAIL_LOG=/var/log/syslog\nMAIL_LOG=/var/log/maillog\n\n\n\nThen we add another variable to /etc/init.d/mailgraph, IGNORE_LOCALHOST. If you have integrated a content filter like amavisd into Postfix, add this line\n\n\nIGNORE_LOCALHOST=\"--ignore-localhost\"\n\n\n\nto the block where the variables like MAIL_LOG are defined. If you don\nt use a content filter, add this line instead:\n\n\nIGNORE_LOCALHOST=\"\"\n\n\n\nIn both cases, change\n\n\nnice -19 $MAILGRAPH_PL -l $MAIL_LOG -d \\\n        --daemon-pid=$PID_FILE --daemon-rrd=$RRD_DIR\nnice -19 $MAILGRAPH_PL -l $MAIL_LOG -d \\\n        --daemon-pid=$PID_FILE --daemon-rrd=$RRD_DIR $IGNORE_LOCALHOST\n\n\n\nSo the final script should look like this (in this case, with \nignore-localhost enabled):\n\n\n#!/bin/sh\n\n# $Id: mailgraph-init,v 1.4 2005/06/13 11:23:22 dws Exp $\n# example init script for mailgraph\n#\n# chkconfig: 2345 82 28\n# description: mailgraph postfix log grapher.\n#\n# processname: mailgraph.pl\n# pidfile: /var/run/mailgraph.pid\n\n\nPATH=/bin:/usr/bin\nMAILGRAPH_PL=/usr/local/bin/mailgraph.pl\nMAIL_LOG=/var/log/maillog\nPID_FILE=/var/run/mailgraph.pid\nRRD_DIR=/var/lib\nIGNORE_LOCALHOST=\"--ignore-localhost\"\n\ncase \"$1\" in\n'start')\n        echo \"Starting mail statistics grapher: mailgraph\";\n        nice -19 $MAILGRAPH_PL -l $MAIL_LOG -d \\\n                --daemon-pid=$PID_FILE --daemon-rrd=$RRD_DIR $IGNORE_LOCALHOST\n        ;;\n\n'stop')\n        echo \"Stopping mail statistics grapher: mailgraph\";\n        if [ -f $PID_FILE ]; then\n                kill `cat $PID_FILE`\n                rm $PID_FILE\n        else\n                echo \"mailgraph not running\";\n        fi\n        ;;\n\n*)\n        echo \"Usage: $0 { start | stop }\"\n        exit 1\n        ;;\n\nesac\nexit 0\n\n\n\nNext we make the script executable, create the appropriate system startup links and start Mailgraph:\n\n\nchmod 755 /etc/init.d/mailgraph\u2028chkconfig --levels 235 mailgraph on\u2028/etc/init.d/mailgraph start\n\n\n\nStill in the /tmp/mailgraph-1.12 directory, we move mailgraph.cgi to our cgi-bin directory:\n\n\nmv mailgraph.cgi /var/www/www.example.com/cgi-bin/\n\n\n\nNow we open the file and adjust the locations of the two Mailgraph databases.\n\n\nvi /var/www/www.example.com/cgi-bin/mailgraph.cgi\n\n\n\nChange\n\n\nmy $rrd = 'mailgraph.rrd'; # path to where the RRD database is\nmy $rrd_virus = 'mailgraph_virus.rrd'; # path to where the Virus RRD database is\nmy $rrd = '/var/lib/mailgraph.rrd'; # path to where the RRD database is\nmy $rrd_virus = '/var/lib/mailgraph_virus.rrd'; # path to where the Virus RRD database is\n\n\n\nThen we make the script executable:\n\n\nchmod 755 /var/www/www.example.com/cgi-bin/mailgraph.cgi\n\n\n\nIf you use suExec for the www.example.com web site, you must chown mailgraph.cgi to the appropriate owner and group.\n\n\nNow direct your browser to http://www.example.com/cgi-bin/mailgraph.cgi, and you should see some graphs. Of course, there must be some emails going through your system before you see the first results, so be patient.\n\n\n4.2 pflogsumm\n\n\nThe steps differ only slightly from those on Debian and Ubuntu. The main difference is that Postfix logs to /var/log/maillog on Fedora instead of /var/log/mail.log (Debian/Ubuntu) (pay attention to the dot!).\n\n\nFirst we install pflogsumm:\n\n\nyum install postfix-pflogsumm\n\n\n\nWe want pflogsumm to be run by a cron job each day and send the report to postmaster@example.com. Therefore we must configure our system that it writes one mail log file for 24 hours, and afterwards starts the next mail log so that we can feed the old mail log to pflogsumm. Therefore we configure logrotate (that\ns the program that rotates our system\ns log files) like this: open /etc/logrotate.conf and append the following stanza to it, after the line # system-specific logs may be configured here:\n\n\nvi /etc/logrotate.conf\n/var/log/maillog {\n    missingok\n    daily\n    rotate 7\n    create\n    compress\n    start 0\n}\nAlso change /etc/logrotate.d/syslog\nvi /etc/logrotate.d/syslog\n/var/log/messages /var/log/secure /var/log/maillog /var/log/spooler /var/log/boot.log /var/log/cron {\n    sharedscripts\n    postrotate\n        /bin/kill -HUP `cat /var/run/syslogd.pid 2\n /dev/null` 2\n /dev/null || true\n    endscript\n}\n/var/log/messages /var/log/secure /var/log/spooler /var/log/boot.log /var/log/cron {\n    sharedscripts\n    postrotate\n        /bin/kill -HUP `cat /var/run/syslogd.pid 2\n /dev/null` 2\n /dev/null || true\n    endscript\n}\n\n\n\nThere\ns a logrotate script in /etc/cron.daily. This script is called everyday between 06:00h and 07:00h. With the configuration we just made, it will copy the current Postfix log /var/log/maillog to /var/log/maillog.0 and compress it, and the compressed file will be /var/log/maillog.0.gz. It will also create a new, empty /var/log/maillog to which Postfix can log for the next 24 hours.\n\n\nNow we create the script /usr/local/sbin/postfix_report.sh which invokes pflogsumm and makes it send the report to postmaster@example.com:\n\n\nvi /usr/local/sbin/postfix_report.sh\n#!/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\ngunzip /var/log/maillog.0.gz\n\npflogsumm /var/log/maillog.0 | formail -c -I\"Subject: Mail Statistics\" -I\"From: pflogsumm@localhost\" -I\"To: postmaster@example.com\" -I\"Received: from www.example.com ([192.168.0.100])\" | sendmail postmaster@example.com\n\ngzip /var/log/maillog.0\nexit 0\n\n\n\nWe must make this script executable:\n\n\nchmod 755 /usr/local/sbin/postfix_report.sh\n\n\n\nThen we create a cron job which calls the script everyday at 07:00h:\n\n\ncrontab -e 0 7 * * * /usr/local/sbin/postfix_report.sh \n /dev/null\n\n\nThis will send the report to postmaster@example.com.\n\n\nmailgraph statistics for postfix running on nginx\n\n\nI\u2019m using postfix as my mail server. In order to get nice graphical overview about the server activity I\u2019m using mailgraph.\u2028Mailgraph is a cgi script written in perl. It uses rrdtool to produce daily, weekly, monthly and yearly graphs of received/sent and bounced/rejected mail.\n\n\nInstalling mailgraph on debian is as easy as running:\n\n\naptitude install mailgraph\n\n\n\nThe configuration takes place in /etc/default/mailgraph. Make sure to modify it according to your mail setup.\nIn order to run in on nginx server, one needs to install fcgiwrap and spawn-fcgi first. Nothing simpler than that:\n\n\naptitude install fcgiwrap spawn-fcgi\n\n\n\nConfiguring nginx to use fcgiwrap requires the following:\n\n\nCreation of the /etc/nginx/conf.d/fcgiwrap.conf file with the following content:\n\n\n.   upstream fcgiwrap {\n.      server unix:/var/run/fcgiwrap.socket;\n.   }\n.   Instructions to the nginx, to pass the cgi scripts to fcgiwrap (done in the server section for the virtual host):\n.   location ~ \\.cgi$ {\n.      root /usr/lib/cgi-bin;\n.      include /etc/nginx/fastcgi_params;\n.      fastcgi_pass fcgiwrap;\n.   }\n\n\n\nThe result for weekly statistics looks like shown below:\n\n\nSimple Bash Monitoring\n\n\nYou can monitor the queues with a simple bashscript:\n\n\n#!/bin/bash # 20.06.2011 - JJaritsch @ ANEXIA Internetdienstleistungs GmbH # jj@anexia.at  queuelength=`/usr/sbin/postqueue -p | tail -n1 | awk '{print $5}'` queuecount=`echo $queuelength | grep \"[0-9]\"`  if [ \"$queuecount\" == \"\" ]; then         echo 0; else         echo ${queuelength}; fi exit 35\n\n\n\nSave this script and make it executable (0755 is enough) for the snmpd user. The next step is to add the following line to your snmpd.conf:\n\n\nexec postqueue /path/to/your/snmp_monitor_postqueue.sh\n\n\n\nIf you want to use sudo, you can add this line:\n\n\nexec postqueue /usr/bin/sudo /path/to/your/snmp_monitor_postqueue.sh\n\n\n\nIn case of sudo you also have to add the following to your sudoers file (so there is no auth required to execute this script):\n\n\nsnmp ALL=(ALL) NOPASSWD: /path/to/your/snmp_monitor_postqueue.sh\n\n\n\nReload your snmpd - you will find the count-result in .1.3.6.1.4.1.2021.8.1.101.* (for example in .1.3.6.1.4.1.2021.8.1.101.1 if you have no other additional lines in the snmpd.conf).\n\n\nAnother monitoring Bash \u2013 MSMTP\n\n\nIn addition to Bryan Rehbein\ns answer above, here\ns a script I use to monitor postfix queue lengths. All it does is send an email alert once a queue grows beyond X messages in size. The alert is sent using msmtp (a tiny command line smtp client) so it bypasses the local postfix installation (which you can\nt rely on to get your alert out in a timely fashion if its queues are growing\n)\n\n\n#!/bin/bash\n# # Postfix queue length monitoring script (requires msmtp)\n# # This script checks the active, incoming, deferred and maildrop postfix queue directories.\n# # If the number of messages in any of these directories is more than $MAX_QUEUE_LENGTH,\n# the script will generate an alert email and send it using msmtp. We use msmtp so that # we can bypass the local postfix installation (since if the queues are getting big, # the alert email may not be sent in time to catch the problem).\n#  ########################################################\n# # SET SCRIPT VARS ########################################################\n#  # Path to msmtp binary (e.g. /usr/bin/msmtp on Debian systems) MSMTP=/usr/bin/msmtp\n# Remote mail host (this is the mail server msmtp will use to send the alert. It should NOT be the local postfix installation) MAILHOST=backup.mailserver.com\n# Remote mail port MAILPORT=25\n# Mail protocol MAILPROTO=smtp\n# Fully qualified domain name of local postfix installation DOMAIN=primary.mailserver.com\n# From address MAILFROM=postmaster@mailserver.com\n# Recipient (this address should not route to the local postfix installation, for obvious reasons) MAILTO=\"alerts@anotherdomain.com\"\n# Email subject MAILSUBJECT=\"Postfix queue length alert for ${DOMAIN}\"  # MSMTP log file LOGFILE=/var/log/msmtp.log\n# Root of the postfix queue dirs (e.g. /var/spool/postfix on Debian systems). Note: no trailing slash. QUEUEDIR_ROOT=\"/var/spool/postfix\"\n# Max queue length (if there are more messages in a queue than this number, we will send an alert) MAX_QUEUE_LENGTH=10   #########################################################\n# SCRIPT LOGIC STARTS HERE #########################################################\n\n# Check msmtp binary exists\n\nif [ ! -f ${MSMTP} ] then         echo \"Cannot find ${MSMTP}. Exiting.\"         exit 1 fi  # Get the number of messages sitting in each postfix queue directory Q_ACTIVE=$(find ${QUEUEDIR_ROOT}/active -type f | wc -l) Q_INCOMING=$(find ${QUEUEDIR_ROOT}/incoming -type f | wc -l) Q_DEFERRED=$(find ${QUEUEDIR_ROOT}/deferred -type f | wc -l) Q_MAILDROP=$(find ${QUEUEDIR_ROOT}/maildrop -type f | wc -l)  # If any of these queues contain more than $MAX_QUEUE_LENGTH issue an alert if [ ${Q_ACTIVE} -gt ${MAX_QUEUE_LENGTH} -o ${Q_INCOMING} -gt ${MAX_QUEUE_LENGTH} -o ${Q_DEFERRED} -gt ${MAX_QUEUE_LENGTH} -o ${Q_MAILDROP} -gt ${MAX_QUEUE_LENGTH} ]; then      (         echo \"From: ${MAILFROM} \"         echo \"To: ${MAILTO} \"         echo \"Mime-Version: 1.0\"         echo 'Content-Type: text/plain; charset=\"iso-8859-1\"'         echo \"Subject: ${MAILSUBJECT}\"         echo \"\"         echo \"One or more of the postfix queues on ${DOMAIN} has grown beyond ${MAX_QUEUE_LENGTH} messages in length.\"     ) | ${MSMTP} --host=${MAILHOST} --port=${MAILPORT} --protocol=${MAILPROTO} --domain=${DOMAIN} --auth=off --tls=off --from=${MAILFROM} --logfile=${LOGFILE} --syslog=off --read-recipients      exit 2  fi  exit 0", 
            "title": "12. Monitoring"
        }, 
        {
            "location": "/monitoring/#mailgraph-and-pflogsumm", 
            "text": "Want to support HowtoForge? Become a subscriber!\nSubmitted by falko (Contact Author) (Forums) on Mon, 2006-07-03 15:58. ::  4 Fedora Core 5\n4.1 Mailgraph  There s no Mailgraph package available for Fedora Core 5, so we must install it manually. First, we need to install the prerequsities that Mailgraph requires:  yum install rrdtool rrdtool-perl perl-File-Tail  Then we download the Mailgraph sources and copy the Mailgraph scripts to the appropriate locations:  cd /tmp\u2028wget http://people.ee.ethz.ch/~dws/software/mailgraph/pub/mailgraph-1.12.tar.gz\u2028tar xvfz mailgraph-1.12.tar.gz\u2028cd mailgraph-1.12\u2028mv mailgraph.pl /usr/local/bin/mailgraph.pl\u2028mv mailgraph-init /etc/init.d/mailgraph  Now we must adjust the Mailgraph init script /etc/init.d/mailgraph:  vi /etc/init.d/mailgraph  On Fedora, the Postfix mail log is /var/log/maillog, so we change  MAIL_LOG=/var/log/syslog\nMAIL_LOG=/var/log/maillog  Then we add another variable to /etc/init.d/mailgraph, IGNORE_LOCALHOST. If you have integrated a content filter like amavisd into Postfix, add this line  IGNORE_LOCALHOST=\"--ignore-localhost\"  to the block where the variables like MAIL_LOG are defined. If you don t use a content filter, add this line instead:  IGNORE_LOCALHOST=\"\"  In both cases, change  nice -19 $MAILGRAPH_PL -l $MAIL_LOG -d \\\n        --daemon-pid=$PID_FILE --daemon-rrd=$RRD_DIR\nnice -19 $MAILGRAPH_PL -l $MAIL_LOG -d \\\n        --daemon-pid=$PID_FILE --daemon-rrd=$RRD_DIR $IGNORE_LOCALHOST  So the final script should look like this (in this case, with  ignore-localhost enabled):  #!/bin/sh\n\n# $Id: mailgraph-init,v 1.4 2005/06/13 11:23:22 dws Exp $\n# example init script for mailgraph\n#\n# chkconfig: 2345 82 28\n# description: mailgraph postfix log grapher.\n#\n# processname: mailgraph.pl\n# pidfile: /var/run/mailgraph.pid\n\n\nPATH=/bin:/usr/bin\nMAILGRAPH_PL=/usr/local/bin/mailgraph.pl\nMAIL_LOG=/var/log/maillog\nPID_FILE=/var/run/mailgraph.pid\nRRD_DIR=/var/lib\nIGNORE_LOCALHOST=\"--ignore-localhost\"\n\ncase \"$1\" in\n'start')\n        echo \"Starting mail statistics grapher: mailgraph\";\n        nice -19 $MAILGRAPH_PL -l $MAIL_LOG -d \\\n                --daemon-pid=$PID_FILE --daemon-rrd=$RRD_DIR $IGNORE_LOCALHOST\n        ;;\n\n'stop')\n        echo \"Stopping mail statistics grapher: mailgraph\";\n        if [ -f $PID_FILE ]; then\n                kill `cat $PID_FILE`\n                rm $PID_FILE\n        else\n                echo \"mailgraph not running\";\n        fi\n        ;;\n\n*)\n        echo \"Usage: $0 { start | stop }\"\n        exit 1\n        ;;\n\nesac\nexit 0  Next we make the script executable, create the appropriate system startup links and start Mailgraph:  chmod 755 /etc/init.d/mailgraph\u2028chkconfig --levels 235 mailgraph on\u2028/etc/init.d/mailgraph start  Still in the /tmp/mailgraph-1.12 directory, we move mailgraph.cgi to our cgi-bin directory:  mv mailgraph.cgi /var/www/www.example.com/cgi-bin/  Now we open the file and adjust the locations of the two Mailgraph databases.  vi /var/www/www.example.com/cgi-bin/mailgraph.cgi  Change  my $rrd = 'mailgraph.rrd'; # path to where the RRD database is\nmy $rrd_virus = 'mailgraph_virus.rrd'; # path to where the Virus RRD database is\nmy $rrd = '/var/lib/mailgraph.rrd'; # path to where the RRD database is\nmy $rrd_virus = '/var/lib/mailgraph_virus.rrd'; # path to where the Virus RRD database is  Then we make the script executable:  chmod 755 /var/www/www.example.com/cgi-bin/mailgraph.cgi  If you use suExec for the www.example.com web site, you must chown mailgraph.cgi to the appropriate owner and group.  Now direct your browser to http://www.example.com/cgi-bin/mailgraph.cgi, and you should see some graphs. Of course, there must be some emails going through your system before you see the first results, so be patient.", 
            "title": "Mailgraph And pflogsumm"
        }, 
        {
            "location": "/monitoring/#42-pflogsumm", 
            "text": "The steps differ only slightly from those on Debian and Ubuntu. The main difference is that Postfix logs to /var/log/maillog on Fedora instead of /var/log/mail.log (Debian/Ubuntu) (pay attention to the dot!).  First we install pflogsumm:  yum install postfix-pflogsumm  We want pflogsumm to be run by a cron job each day and send the report to postmaster@example.com. Therefore we must configure our system that it writes one mail log file for 24 hours, and afterwards starts the next mail log so that we can feed the old mail log to pflogsumm. Therefore we configure logrotate (that s the program that rotates our system s log files) like this: open /etc/logrotate.conf and append the following stanza to it, after the line # system-specific logs may be configured here:  vi /etc/logrotate.conf\n/var/log/maillog {\n    missingok\n    daily\n    rotate 7\n    create\n    compress\n    start 0\n}\nAlso change /etc/logrotate.d/syslog\nvi /etc/logrotate.d/syslog\n/var/log/messages /var/log/secure /var/log/maillog /var/log/spooler /var/log/boot.log /var/log/cron {\n    sharedscripts\n    postrotate\n        /bin/kill -HUP `cat /var/run/syslogd.pid 2  /dev/null` 2  /dev/null || true\n    endscript\n}\n/var/log/messages /var/log/secure /var/log/spooler /var/log/boot.log /var/log/cron {\n    sharedscripts\n    postrotate\n        /bin/kill -HUP `cat /var/run/syslogd.pid 2  /dev/null` 2  /dev/null || true\n    endscript\n}  There s a logrotate script in /etc/cron.daily. This script is called everyday between 06:00h and 07:00h. With the configuration we just made, it will copy the current Postfix log /var/log/maillog to /var/log/maillog.0 and compress it, and the compressed file will be /var/log/maillog.0.gz. It will also create a new, empty /var/log/maillog to which Postfix can log for the next 24 hours.  Now we create the script /usr/local/sbin/postfix_report.sh which invokes pflogsumm and makes it send the report to postmaster@example.com:  vi /usr/local/sbin/postfix_report.sh\n#!/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\ngunzip /var/log/maillog.0.gz\n\npflogsumm /var/log/maillog.0 | formail -c -I\"Subject: Mail Statistics\" -I\"From: pflogsumm@localhost\" -I\"To: postmaster@example.com\" -I\"Received: from www.example.com ([192.168.0.100])\" | sendmail postmaster@example.com\n\ngzip /var/log/maillog.0\nexit 0  We must make this script executable:  chmod 755 /usr/local/sbin/postfix_report.sh  Then we create a cron job which calls the script everyday at 07:00h:  crontab -e 0 7 * * * /usr/local/sbin/postfix_report.sh   /dev/null  This will send the report to postmaster@example.com.  mailgraph statistics for postfix running on nginx  I\u2019m using postfix as my mail server. In order to get nice graphical overview about the server activity I\u2019m using mailgraph.\u2028Mailgraph is a cgi script written in perl. It uses rrdtool to produce daily, weekly, monthly and yearly graphs of received/sent and bounced/rejected mail.  Installing mailgraph on debian is as easy as running:  aptitude install mailgraph  The configuration takes place in /etc/default/mailgraph. Make sure to modify it according to your mail setup.\nIn order to run in on nginx server, one needs to install fcgiwrap and spawn-fcgi first. Nothing simpler than that:  aptitude install fcgiwrap spawn-fcgi  Configuring nginx to use fcgiwrap requires the following:  Creation of the /etc/nginx/conf.d/fcgiwrap.conf file with the following content:  .   upstream fcgiwrap {\n.      server unix:/var/run/fcgiwrap.socket;\n.   }\n.   Instructions to the nginx, to pass the cgi scripts to fcgiwrap (done in the server section for the virtual host):\n.   location ~ \\.cgi$ {\n.      root /usr/lib/cgi-bin;\n.      include /etc/nginx/fastcgi_params;\n.      fastcgi_pass fcgiwrap;\n.   }  The result for weekly statistics looks like shown below:", 
            "title": "4.2 pflogsumm"
        }, 
        {
            "location": "/monitoring/#simple-bash-monitoring", 
            "text": "You can monitor the queues with a simple bashscript:  #!/bin/bash # 20.06.2011 - JJaritsch @ ANEXIA Internetdienstleistungs GmbH # jj@anexia.at  queuelength=`/usr/sbin/postqueue -p | tail -n1 | awk '{print $5}'` queuecount=`echo $queuelength | grep \"[0-9]\"`  if [ \"$queuecount\" == \"\" ]; then         echo 0; else         echo ${queuelength}; fi exit 35  Save this script and make it executable (0755 is enough) for the snmpd user. The next step is to add the following line to your snmpd.conf:  exec postqueue /path/to/your/snmp_monitor_postqueue.sh  If you want to use sudo, you can add this line:  exec postqueue /usr/bin/sudo /path/to/your/snmp_monitor_postqueue.sh  In case of sudo you also have to add the following to your sudoers file (so there is no auth required to execute this script):  snmp ALL=(ALL) NOPASSWD: /path/to/your/snmp_monitor_postqueue.sh  Reload your snmpd - you will find the count-result in .1.3.6.1.4.1.2021.8.1.101.* (for example in .1.3.6.1.4.1.2021.8.1.101.1 if you have no other additional lines in the snmpd.conf).", 
            "title": "Simple Bash Monitoring"
        }, 
        {
            "location": "/monitoring/#another-monitoring-bash-msmtp", 
            "text": "In addition to Bryan Rehbein s answer above, here s a script I use to monitor postfix queue lengths. All it does is send an email alert once a queue grows beyond X messages in size. The alert is sent using msmtp (a tiny command line smtp client) so it bypasses the local postfix installation (which you can t rely on to get your alert out in a timely fashion if its queues are growing )  #!/bin/bash\n# # Postfix queue length monitoring script (requires msmtp)\n# # This script checks the active, incoming, deferred and maildrop postfix queue directories.\n# # If the number of messages in any of these directories is more than $MAX_QUEUE_LENGTH,\n# the script will generate an alert email and send it using msmtp. We use msmtp so that # we can bypass the local postfix installation (since if the queues are getting big, # the alert email may not be sent in time to catch the problem).\n#  ########################################################\n# # SET SCRIPT VARS ########################################################\n#  # Path to msmtp binary (e.g. /usr/bin/msmtp on Debian systems) MSMTP=/usr/bin/msmtp\n# Remote mail host (this is the mail server msmtp will use to send the alert. It should NOT be the local postfix installation) MAILHOST=backup.mailserver.com\n# Remote mail port MAILPORT=25\n# Mail protocol MAILPROTO=smtp\n# Fully qualified domain name of local postfix installation DOMAIN=primary.mailserver.com\n# From address MAILFROM=postmaster@mailserver.com\n# Recipient (this address should not route to the local postfix installation, for obvious reasons) MAILTO=\"alerts@anotherdomain.com\"\n# Email subject MAILSUBJECT=\"Postfix queue length alert for ${DOMAIN}\"  # MSMTP log file LOGFILE=/var/log/msmtp.log\n# Root of the postfix queue dirs (e.g. /var/spool/postfix on Debian systems). Note: no trailing slash. QUEUEDIR_ROOT=\"/var/spool/postfix\"\n# Max queue length (if there are more messages in a queue than this number, we will send an alert) MAX_QUEUE_LENGTH=10   #########################################################\n# SCRIPT LOGIC STARTS HERE #########################################################\n\n# Check msmtp binary exists\n\nif [ ! -f ${MSMTP} ] then         echo \"Cannot find ${MSMTP}. Exiting.\"         exit 1 fi  # Get the number of messages sitting in each postfix queue directory Q_ACTIVE=$(find ${QUEUEDIR_ROOT}/active -type f | wc -l) Q_INCOMING=$(find ${QUEUEDIR_ROOT}/incoming -type f | wc -l) Q_DEFERRED=$(find ${QUEUEDIR_ROOT}/deferred -type f | wc -l) Q_MAILDROP=$(find ${QUEUEDIR_ROOT}/maildrop -type f | wc -l)  # If any of these queues contain more than $MAX_QUEUE_LENGTH issue an alert if [ ${Q_ACTIVE} -gt ${MAX_QUEUE_LENGTH} -o ${Q_INCOMING} -gt ${MAX_QUEUE_LENGTH} -o ${Q_DEFERRED} -gt ${MAX_QUEUE_LENGTH} -o ${Q_MAILDROP} -gt ${MAX_QUEUE_LENGTH} ]; then      (         echo \"From: ${MAILFROM} \"         echo \"To: ${MAILTO} \"         echo \"Mime-Version: 1.0\"         echo 'Content-Type: text/plain; charset=\"iso-8859-1\"'         echo \"Subject: ${MAILSUBJECT}\"         echo \"\"         echo \"One or more of the postfix queues on ${DOMAIN} has grown beyond ${MAX_QUEUE_LENGTH} messages in length.\"     ) | ${MSMTP} --host=${MAILHOST} --port=${MAILPORT} --protocol=${MAILPROTO} --domain=${DOMAIN} --auth=off --tls=off --from=${MAILFROM} --logfile=${LOGFILE} --syslog=off --read-recipients      exit 2  fi  exit 0", 
            "title": "Another monitoring Bash \u2013 MSMTP"
        }, 
        {
            "location": "/conclusion/", 
            "text": "HELO check\nhelocheck@cbl.abuseat.org\n\n\nhttp://www.mail-tester.com/\navoid broken links, multi domains links\nhttp://www.kitterman.com/spf/validate.html\n\n\nhttps://www.blacklistmaster.com\n\n\nhttp://postmaster.free.fr/\n\n\nBig companies can send millions emails a day without trick, just following good practices\n\n\ndouble opt-in (give email and validate)\nbounce management\ndomain configuration; from; links\nkeywords\n\n\nIf you dont want to manage everything; we are doing it for you with MAILCHITA, first grade service for serious emailers.\n\n\nSegregate IPs\n\n\nDon\nt send bulk/marketing email from the same IPs you use to send user mail, transactional mail, alerts, etc. Each IP you send from has a reputation. By segregating your IPs according to function, you help ensure that your mail receives the best delivery possible.\n\n\nIf you send both promotional mail and transactional mail relating to your organization, we recommend separating mail by purpose as much as possible. You can do this by:\n\n\nUsing separate email addresses for each function.\nSending mail from different domains and/or IP addresses for each function.\n\n\nUpdate: For future reference, the problem was in /etc/mailname which listed a name that wasn\nt in the mydestinations list of postfix. This caused all mails to be considered foreign and the mail bypassed /etc/aliases processing\n\u2003\n\n\nTest Test Test\nhttp://www.facilemail.fr/\nhttp://www.port25.com/support/authentication-center/email-verification/\nhttp://isnotspam.com/\nhttp://spamscorechecker.com/\nhttps://www.dnsstuff.com/member/register/\nhttp://www.dnsgoodies.com/\nhttp://www.debouncer.com/mx-lookup\nhttp://dnscheck.pingdom.com/?domain=mailing.pronostic-facile.fr\nhttp://protodave.com/security/checking-your-dkim-dns-record/\nhttp://mxtoolbox.com/SuperTool.aspx?action=smtp%3a188.226.182.49\nrun=toolpage#\n\n\nResources\n\n\nmailbang\nmailchita\nmailintouch", 
            "title": "13. Conlusion and Tips"
        }
    ]
}